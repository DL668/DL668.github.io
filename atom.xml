<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>轻抚酸</title>
  
  <subtitle>网安菜鸡日记</subtitle>
  <link href="https://www.hfqing.top/atom.xml" rel="self"/>
  
  <link href="https://www.hfqing.top/"/>
  <updated>2025-09-13T08:38:28.378Z</updated>
  <id>https://www.hfqing.top/</id>
  
  <author>
    <name>轻抚酸</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小迪23年-32~40——java简单回顾（1）</title>
    <link href="https://www.hfqing.top/2025/08/08/%E5%B0%8F%E8%BF%AA23%E5%B9%B4-32~40%E2%80%94%E2%80%94java%E7%AE%80%E5%8D%95%E5%9B%9E%E9%A1%BE%EF%BC%881%EF%BC%89/"/>
    <id>https://www.hfqing.top/2025/08/08/%E5%B0%8F%E8%BF%AA23%E5%B9%B4-32~40%E2%80%94%E2%80%94java%E7%AE%80%E5%8D%95%E5%9B%9E%E9%A1%BE%EF%BC%881%EF%BC%89/</id>
    <published>2025-08-08T02:39:46.000Z</published>
    <updated>2025-09-13T08:38:28.378Z</updated>
    
    <content type="html"><![CDATA[<p>b站小迪23年网安基础课程，28节——31节，java简单回顾（1）</p><span id="more"></span><h1 id="原生类"><a href="#原生类" class="headerlink" title="原生类"></a>原生类</h1><blockquote><p>课堂完结后欲复习巩固也方便后续-重游-故写此篇<br>从实现功能过渡到涉及的相关知识点</p></blockquote><h2 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h2><blockquote><p>Java Servlet 是运行在 Web 服务器或应用服务器上的程序，它是作为来自 Web 浏览器或其他 HTTP 客户端的请求和 HTTP 服务器上的数据库或应用程序之间的中间层。<br>简单来说就是帮你接收和发送浏览器信息的，需自定路由的“中间层”</p></blockquote><table><tr><td bgcolor=DarkSeaGreen>知识点</td></tr></table><p><strong>1、</strong> 有两种设置路由的方式。<br>&nbsp;&nbsp;1.1、最原生的是在 <code>java</code> 同级文件夹 <code>webapp</code> 的里的文件 <code>web.xml</code> 里设置，比如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>sun<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.example.demo1.sun_servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>sun<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/sun1<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>sun<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/sun2<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;1.2、还有就是普遍使用的Servlet 3.0引入的一个特性   <code>@Webservlert</code> 注解</p><blockquote><p>@WebServlet注解是Servlet 3.0引入的一个特性，它允许开发者在Servlet类上使用注解来声明Servlet的一些属性，从而避免在web.xml文件中进行配置。</p></blockquote><p>只需了解前两个属性就好：name，value。例：<code>@Webservlet(name=&quot;nm&quot;,value=&quot;/path&quot;)</code> ，可简写作<code>@Webservlet(&quot;/path&quot;)</code></p><blockquote><p><code>name</code> 的值相当于 <code>web.xml</code> 里的 <code>&lt;servlet-name&gt;</code> 属性，不写默认为类的全限定名</p></blockquote><p><strong>2、</strong> 全限定类名</p><blockquote><p>全限定类名的主要作用是提供一个唯一的类标识，避免不同包中具有相同类名的类之间的冲突。</p></blockquote><p>比如 <code>servlert</code> 必须引用的 <code>HttpServlet</code> 的全限定类名是 ：<code>javax.servlet.http.HttpServlet</code></p><p><strong>3、</strong> 除了支持 get、post 方式发送请求的重写方法 <code>doGet</code> 和<code>doPost</code>，还有只在最开始执行一次的 <code>init()</code>，只在销毁的时候执行一次的 <code>destroy</code></p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p><del>具体的知识点不多，以自带的 HelloServlet 类为例小小改一下当复习就好了</del></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(name = &quot;helloServlet&quot;, value = &quot;/hello-servlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">        <span class="comment">//最先被执行且一次</span></span><br><span class="line">        message = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        <span class="comment">// Hello</span></span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line"><span class="comment">//        out.println(&quot;&lt;html&gt;&lt;body&gt;&quot;);</span></span><br><span class="line"><span class="comment">//       out.println(&quot;&lt;h1&gt;&quot; + message + &quot;&lt;/h1&gt;&quot;);</span></span><br><span class="line"><span class="comment">//       out.println(&quot;&lt;/body&gt;&lt;/html&gt;&quot;);</span></span><br><span class="line">        <span class="comment">// 或者换种支持链式写法 </span></span><br><span class="line">        out.append(<span class="string">&quot;&lt;html&gt;&lt;body&gt;&quot;</span>)</span><br><span class="line">                .append(<span class="string">&quot;&lt;h1&gt;&quot;</span> + message + <span class="string">&quot;&lt;/h1&gt;&quot;</span>)</span><br><span class="line">                .append(<span class="string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我销毁了，你看着办&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h2><blockquote><p>JDBC（Java Database Connectivity）是Java语言中用于操作关系型数据库的一套API。它提供了一组标准接口，使得Java程序可以与不同的数据库进行交互。JDBC的核心思想是面向接口编程，通过定义一组标准接口，各个数据库厂商实现这些接口，从而提供数据库驱动。</p></blockquote><p>简单流程：导入驱动 jar 包 -&gt; 通过反射加载驱动 -&gt; 连接数据库 -&gt; 请求并接收处理返回的数据库数据</p><table><tr><td bgcolor=DarkSeaGreen>知识点</td></tr></table><p><strong>1、</strong> 由于java的预编译语言特性，所以原生开发就有有效的法子预防sql注入（预编译），后面 Code 里细嗦</p><p><strong>2、</strong> 加载数据库驱动的目的是将 JDBC 驱动加载到 JVM（java虚拟机）里，为后续 连接数据库时调用 JDBC 接口做准备。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载数据库驱动</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3、</strong> 预编译防 sql 原理</p><blockquote><p>预编译（Prepared Statements）是一种在执行SQL查询之前，先将SQL语句的结构固定下来，并将用户输入的参数作为独立的变量处理的方法。具体来说，预编译的SQL语句会先提交给数据库进行编译，生成一个执行计划，然后在执行时再将参数传递给这个执行计划。</p></blockquote><p>所以重点是结构确定了，说简单点就是已经把命令执行完一大半了，就差个参数然后把结果给你了。所以参数是单独处理的！而非拼接然后第二次执行 sql 语句，注入自然是无效的。</p><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><p><font color="green">这里以是否预编译语句连接数据库为例，为了方便测试写在main函数里。如果需要传参也是一样的写在doget里就好了</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[]args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException &#123;</span><br><span class="line">    <span class="comment">//加载数据库驱动</span></span><br><span class="line">    Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取数据库连接</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3307/class_1&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;password&quot;</span>;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(url, username, password);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 预编译安全写法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="comment">//        String sql = &quot;SELECT * FROM news where id=?&quot;;</span></span><br><span class="line"><span class="comment">//        try(PreparedStatement preparedStatement = connection.prepareStatement(sql))&#123;</span></span><br><span class="line"><span class="comment">//            // 设置参数，防止SQL注入攻击</span></span><br><span class="line"><span class="comment">//            preparedStatement.setString(1,&quot;s&quot;);</span></span><br><span class="line"><span class="comment">//            ResultSet resultSet = preparedStatement.executeQuery();</span></span><br><span class="line"><span class="comment">//            while (resultSet.next()) &#123;</span></span><br><span class="line"><span class="comment">//                int id = resultSet.getInt(&quot;id&quot;);</span></span><br><span class="line"><span class="comment">//                String name = resultSet.getString(&quot;title&quot;);</span></span><br><span class="line"><span class="comment">//                String author=resultSet.getString(&quot;author&quot;);</span></span><br><span class="line"><span class="comment">//                String content=resultSet.getString(&quot;content&quot;);</span></span><br><span class="line"><span class="comment">//                String img=resultSet.getString(&quot;img&quot;);</span></span><br><span class="line"><span class="comment">//                System.out.println(&quot;-----------------------&quot;);</span></span><br><span class="line"><span class="comment">//                System.out.println(id);</span></span><br><span class="line"><span class="comment">//                System.out.println(name);</span></span><br><span class="line"><span class="comment">//                System.out.println(author);</span></span><br><span class="line"><span class="comment">//                System.out.println(content);</span></span><br><span class="line"><span class="comment">//                System.out.println(img);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//            //关闭数据库连接</span></span><br><span class="line"><span class="comment">//            resultSet.close();</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 不安全写法</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="comment">//sql语句</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;SELECT * FROM news where id=1&quot;</span>;</span><br><span class="line">    <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> connection.createStatement();</span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> statement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//遍历处理数据库集</span></span><br><span class="line">    <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;title&quot;</span>);</span><br><span class="line">        String author=resultSet.getString(<span class="string">&quot;author&quot;</span>);</span><br><span class="line">        String content=resultSet.getString(<span class="string">&quot;content&quot;</span>);</span><br><span class="line">        String img=resultSet.getString(<span class="string">&quot;img&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;-----------------------&quot;</span>);</span><br><span class="line">        System.out.println(id);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        System.out.println(author);</span><br><span class="line">        System.out.println(content);</span><br><span class="line">        System.out.println(img);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//关闭数据库连接</span></span><br><span class="line">    resultSet.close();</span><br><span class="line">    statement.close();</span><br><span class="line">    connection.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>编译与非编译写法运行结果分别如下所示：</strong><br><strong>编译：</strong><br><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/4664b6181ae9c3006cc462f7d19159f0.png" alt="安全写法"><br><strong>不编译：</strong><br><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/69ccd436d272295d85dc110eebc9fbcc.png" alt="不安全写法"></p><h3 id="安全问题"><a href="#安全问题" class="headerlink" title="安全问题"></a>安全问题</h3><p><strong>1、</strong> 课上讲的就一个是否预编译预防 sql 注入</p><hr><h2 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h2><blockquote><p>过滤器，顾名思义就是过滤作用，在一个请求发送到服务器时，得先经过过滤器（如果有），然后才能到达处理函数。这让过滤器可以完成很多操作，比如身份识别，登录控制，权限管理，过滤敏感词汇等。<br>具体操作就是把包抓到，进行修改然后放行，或者请求拦截返回。</p></blockquote><table><tr><td bgcolor=DarkSeaGreen>知识点</td></tr></table><p><strong>1、</strong> 实现过滤器需要写上注释 <code>@WebFilter(&quot;/path&quot;)</code> 并实现 <code>Filter</code> 接口在 <code>doFilter</code> 方法里面进行过滤等操作。</p><p><strong>2、</strong> 以身份验证为例，可以拿 cookie 里面的值来判断是否是管理员（虽然并不安全）。当然请求包里的所有数据都是能拿到的，可以支持很细化的过滤操作。</p><p><strong>3、</strong> 可以对所有路径进行过滤： <code>@WebFilter(&quot;/*&quot;)</code>，那也意味着过滤可以又多层，只要把请求下放。</p><h3 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h3><p><font color="green">这里两层过滤分别进行-身份识别-和-xss过滤-为例</font></p><p><strong>第一层过滤：过滤非管理员用户（adminFilter）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter(&quot;/*&quot;)</span><span class="comment">//所有路径都检测一下是否是管理员</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">adminFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;---Filter:path:/*：启动成功——init&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;---Filter:path:/*：开始过滤——doFilter&quot;</span>);</span><br><span class="line">        <span class="comment">//两步，判断与放行</span></span><br><span class="line">        HttpServletRequest req=(HttpServletRequest)servletRequest;</span><br><span class="line">        HttpServletResponse rsp=(HttpServletResponse) servletResponse;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取Cookies</span></span><br><span class="line">        Cookie[] cookies = req.getCookies();</span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (cookies != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="type">boolean</span> flag=<span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies)&#123;</span><br><span class="line">                <span class="comment">//查找名为&quot;userId&quot;的cookie</span></span><br><span class="line">                <span class="keyword">if</span> (Objects.equals(cookie.getName(), <span class="string">&quot;userId&quot;</span>) &amp;&amp; Objects.equals(cookie.getValue(), <span class="string">&quot;admin&quot;</span>)) &#123;</span><br><span class="line">                    flag=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;---Filter:path:/*：欢迎管理员——doFilter&quot;</span>);</span><br><span class="line">                <span class="comment">/*操作*/</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;---Filter:path:/*：不是管理员——doFilter&quot;</span>);</span><br><span class="line">                <span class="comment">/*操作*/</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//下放</span></span><br><span class="line">            filterChain.doFilter(req,rsp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;---Filter:path:/*：结束过滤——destroy&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>第二层过滤：过滤xss用户（xssFilter）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter(filterName = &quot;xss&quot;,value = &quot;/xss&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">xssFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;--Filter:path:/xss：启动成功——init&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;--Filter:path:/xss：开始过滤——doFilter&quot;</span>);</span><br><span class="line">        <span class="comment">//两步，判断与放行</span></span><br><span class="line">        HttpServletRequest req=(HttpServletRequest)servletRequest;</span><br><span class="line">        HttpServletResponse rep=(HttpServletResponse)servletResponse;</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;payload&quot;</span>);</span><br><span class="line">        <span class="comment">//1、判断(大小写不敏感</span></span><br><span class="line">        <span class="keyword">if</span>(payload.toLowerCase().contains(<span class="string">&quot;&lt;script&gt;&quot;</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;--Filter:path:/xss：XSS——doFilter&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//放行</span></span><br><span class="line">            System.out.println(<span class="string">&quot;--Filter:path:/xss：无注入——doFilter&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        filterChain.doFilter(req,rep);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;--Filter:path:/xss：结束过滤——destroy&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Servlet路由：&#x2F;xss（xss）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/xss&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">xss</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        resp.getWriter().append(<span class="string">&quot;&lt;h1&gt;hello Filter&lt;/h1&gt;&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;-web:path:/xss：hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>测试如图</strong></p><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/26c8dc45a833430cc9ac2db5648acacc.png" alt="身份鉴权"></p><h3 id="安全问题-1"><a href="#安全问题-1" class="headerlink" title="安全问题"></a>安全问题</h3><p><strong>1、</strong> 作为一个“过滤器”不安全的时候可能就只有程序员过滤不完全，有逻辑漏洞的时候了</p><hr><h2 id="Listener"><a href="#Listener" class="headerlink" title="Listener"></a>Listener</h2><blockquote><p>Listener 是 Java Servlet 规范中的一部分，它提供了一种机制，使开发者能够编写监听器类来监听容器事件，并在事件发生时执行相应的逻辑。<br>下面是常见的三种类型，由于是简单了解，所以只演示<code>HttpSessionListener（会话监听器）</code>的简单监听。</p></blockquote><table><tr><td bgcolor=DarkSeaGreen>知识点</td></tr></table><p><strong>1、</strong> 常见的有三种 Listener</p><ul><li>ServletContextListener（上下文监听器）：用于监听 Web 应用程序的启动和关闭事件。</li><li>HttpSessionListener（会话监听器）：用于监听会话的创建和销毁事件。</li><li>ServletRequestListener（请求监听器）：用于监听请求的创建和销毁事件。</li></ul><h3 id="Code-3"><a href="#Code-3" class="headerlink" title="Code"></a>Code</h3><p><font color="green">这里附上监听器和创建&#x2F;销毁监听器的关键代码</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListenSession</span> <span class="keyword">implements</span> <span class="title class_">HttpSessionListener</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sessionCreated</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;---Listener:监听到了session创建---&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sessionDestroyed</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;---Listener:监听到了session销毁---&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 销毁监听器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;--Listener:销毁Session---&quot;</span>);</span><br><span class="line">    req.getSession().invalidate();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建监听器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    <span class="comment">//创建Session</span></span><br><span class="line">    System.out.println(<span class="string">&quot;--Listener:创建Session---&quot;</span>);</span><br><span class="line">    req.getSession();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>测试结果</strong><br><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/904de4483473df3be35514c347640b69.png" alt="监听测试"></p><hr><h2 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h2><blockquote><p>Java反射是一种强大的机制，允许程序在运行时动态地获取类的结构信息（如字段、方法、构造函数等），并对其进行操作。反射广泛应用于框架设计（如Spring的依赖注入）和动态代理等场景。<br>具体到 code 里就是一个对象的class类，<code>Person.class</code></p></blockquote><table><tr><td bgcolor=DarkSeaGreen>知识点</td></tr></table><p><strong>1、</strong> 反射其实和 mysql 的数据库 <code>information_schema</code> 很像，里面记录了所有的信息，而 java 提供了很多方法供你方便地拿取与调用而非敲搜索语句（），比如一个类，你可以通过反射获得这个类的所有信息，包括成员方法啊，构造方法啊，成员变量，当然也可以进行调用</p><p><strong>2、</strong> 不看具体方法名而直接调用等特征让反射普遍用于框架设计或需要动态调整的场景里</p><p><strong>3、</strong> 如果把存反编译数据的文件打开会发现是如图的乱码</p><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/a2ccbcfb5db360c7cd5e27657a70f71d.png" alt="反序列显示乱码"></p><h3 id="Code-4"><a href="#Code-4" class="headerlink" title="Code"></a>Code</h3><p><font color="green">由于几乎都是理论知识，直接在code里说明方法的作用</font><br><strong>如何获取class</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 如何获取Class实例呢</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 1、通过完整路径</span></span><br><span class="line">Class p1=Class.forName(<span class="string">&quot;com.classthree.demo_01.reflect.Person&quot;</span>);</span><br><span class="line"><span class="comment">// 2、通过类名</span></span><br><span class="line">Class p2=Person.class;</span><br><span class="line"><span class="comment">// 3、通过类的实例</span></span><br><span class="line">Class p3=(<span class="keyword">new</span> <span class="title class_">Person</span>()).getClass();</span><br><span class="line"><span class="comment">// 4、通过类加载器</span></span><br><span class="line">ClassLoader loader=ClassLoader.getSystemClassLoader();</span><br><span class="line">Class p4=loader.loadClass(<span class="string">&quot;com.classthree.demo_01.reflect.Person&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//验证</span></span><br><span class="line">System.out.println(p1==p2);<span class="comment">//true</span></span><br><span class="line">System.out.println(p2==p3);<span class="comment">//true</span></span><br><span class="line">System.out.println(p3==p4);<span class="comment">//true</span></span><br></pre></td></tr></table></figure><p><strong>如何-获得&#x2F;修改-成员变量（Field）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Class获取成员方法</span></span><br><span class="line"><span class="comment"> * 共有就是共有，连默认都不算~</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Class cls= Person.class;</span><br><span class="line"><span class="comment">// 获取公共成员变量数组</span></span><br><span class="line">Field[] g_fields=cls.getFields();</span><br><span class="line">System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line">System.out.println(Arrays.toString(g_fields));</span><br><span class="line">System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line"><span class="comment">// 获取所有成员变量数组</span></span><br><span class="line">Field[] a_fields=cls.getDeclaredFields();</span><br><span class="line">System.out.println(Arrays.toString(a_fields));</span><br><span class="line">System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line"><span class="comment">// 获取单个公共成员变量</span></span><br><span class="line">Field g_field=cls.getField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">System.out.println(g_field);</span><br><span class="line">System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line"><span class="comment">// 获取单个(所有)成员变量</span></span><br><span class="line">Field a_field=cls.getDeclaredField(<span class="string">&quot;nums&quot;</span>);</span><br><span class="line">System.out.println(a_field);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 前面是获取，那么更改呢</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 1、get</span></span><br><span class="line">Person per=<span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">per.age=<span class="number">12</span>;</span><br><span class="line">Field f=cls.getDeclaredField(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;former:&quot;</span>+f.get(per));<span class="comment">//former:12</span></span><br><span class="line"><span class="comment">//2、set</span></span><br><span class="line">f.set(per,<span class="number">22</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;end:&quot;</span>+f.get(per));<span class="comment">//end:22</span></span><br></pre></td></tr></table></figure><p><strong>如何-获得&#x2F;使用-构造方法（Constructor）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 构造方法</span></span><br><span class="line"><span class="comment"> * set并获得实例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Class cls= Person.class;</span><br><span class="line"><span class="comment">// 1、所有公共构造方法</span></span><br><span class="line">Constructor[] con1=cls.getConstructors();</span><br><span class="line">System.out.println(Arrays.toString(con1));</span><br><span class="line">System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line"><span class="comment">// 2、所有构造方法</span></span><br><span class="line">Constructor[] con2=cls.getDeclaredConstructors();</span><br><span class="line">System.out.println(Arrays.toString(con2));</span><br><span class="line">System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line"><span class="comment">// 3、单个公共构造方法</span></span><br><span class="line">Constructor con3=cls.getConstructor();<span class="comment">//无参</span></span><br><span class="line">Person p1= (Person) con3.newInstance();</span><br><span class="line">System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line"><span class="comment">// 4、单个构造方法，私有的话需要true</span></span><br><span class="line">Constructor con4=cls.getDeclaredConstructor(String.class);<span class="comment">//一参</span></span><br><span class="line">con4.setAccessible(<span class="literal">true</span>);</span><br><span class="line"><span class="comment">// 利用构造方法构造出对象</span></span><br><span class="line">Person p2= (Person) con4.newInstance(<span class="string">&quot;Nailu&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>如何-获得&#x2F;使用-成员方法（Method）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获得成员方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Class cls= Person.class;</span><br><span class="line"><span class="comment">// 获取公共成员方法数组   注意：包括继承的！</span></span><br><span class="line">Method[] g_methods=cls.getMethods();</span><br><span class="line">System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line">System.out.println(Arrays.toString(g_methods));</span><br><span class="line">System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line"><span class="comment">// 获取所有成员方法数组</span></span><br><span class="line">Method[] a_methods=cls.getDeclaredMethods();</span><br><span class="line">System.out.println(Arrays.toString(a_methods));</span><br><span class="line">System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line"><span class="comment">// 获取单个公共成员方法</span></span><br><span class="line">Method g_method=cls.getMethod(<span class="string">&quot;pub_test&quot;</span>,<span class="type">int</span>.class);</span><br><span class="line">System.out.println(g_method);</span><br><span class="line">System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line">Method g_method2=cls.getMethod(<span class="string">&quot;pub_test&quot;</span>);<span class="comment">//无参</span></span><br><span class="line">System.out.println(g_method2);</span><br><span class="line">System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line"><span class="comment">// 获取单个(所有)成员方法</span></span><br><span class="line">Method a_method=cls.getDeclaredMethod(<span class="string">&quot;pub_test&quot;</span>,<span class="type">int</span>.class,String.class);</span><br><span class="line">System.out.println(a_method);</span><br><span class="line">System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line">Method a_method2=cls.getDeclaredMethod(<span class="string">&quot;pub_test&quot;</span>,String.class,<span class="type">int</span>.class);</span><br><span class="line">System.out.println(a_method2);</span><br><span class="line">System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方法的执行</span></span><br><span class="line"><span class="comment"> * 浅浅写几个</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Person p1=<span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">a_method2.invoke(p1,<span class="string">&quot;456&quot;</span>,<span class="number">123</span>);<span class="comment">//公共双参方法456+123</span></span><br></pre></td></tr></table></figure><p><strong>还有就是类Person</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">protected</span> String gender;</span><br><span class="line">    <span class="keyword">private</span> String nums;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公共无参&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公共二参：&quot;</span>+name+<span class="string">&quot;+&quot;</span>+age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Person</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;私有一参：&quot;</span>+name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Person&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, nums=&#x27;&quot;</span> + nums + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">pri_test</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;私有单参方法&quot;</span>+a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">pri_test</span><span class="params">(<span class="type">int</span> a,String b)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;私有双参方法&quot;</span>+a+<span class="string">&quot;+&quot;</span>+b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pub_test</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公共无参方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pub_test</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公共单参方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pub_test</span><span class="params">(<span class="type">int</span> a,String b)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公共双参方法&quot;</span>+a+<span class="string">&quot;+&quot;</span>+b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pub_test</span><span class="params">(String a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公共双参方法&quot;</span>+a+<span class="string">&quot;+&quot;</span>+b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="Serializer"><a href="#Serializer" class="headerlink" title="Serializer"></a>Serializer</h2><blockquote><p>Java序列化是将Java对象转换为字节序列的过程，而Java反序列化是将字节序列恢复为Java对象的过程。</p></blockquote><table><tr><td bgcolor=DarkSeaGreen>知识点</td></tr></table><p><strong>1、</strong> 序列化就是把代码变成字节形式，易于保存（可保存到文件或数据库里）和网络传输</p><p><strong>2、</strong> 反序列化漏洞，顾名思义就是在反序列化的时候出现的漏洞。比如网站反序列化你的序列化文件给你，那么就可以自己构造含有恶意代码的对象。（恶意代码可以在构造函数里，也可以在静态代码块里比如toString，还可以在方法里）</p><h3 id="Code-5"><a href="#Code-5" class="headerlink" title="Code"></a>Code</h3><p><font color="green">这里先讲普遍的方式，在对象里加恶意代码。下面还有课上讲的利用特定类的配合进行带出</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 想要序列化这个对象就得先实现 Serializable 这个标记接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">protected</span> String gender;</span><br><span class="line">    <span class="keyword">private</span> String nums;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公共无参&quot;</span>);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 无参构造函数测试 ac</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"><span class="comment">//        try &#123;</span></span><br><span class="line"><span class="comment">//            Runtime.getRuntime().exec(&quot;calc&quot;);</span></span><br><span class="line"><span class="comment">//        &#125; catch (IOException e) &#123;</span></span><br><span class="line"><span class="comment">//            throw new RuntimeException(e);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 1、构造函数代码块隐式执行</span></span><br><span class="line"><span class="comment">         * 前提是-序列化的对象-创建时调用的是这个构造方法</span></span><br><span class="line"><span class="comment">         * =反序列化的时候弹窗</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line"><span class="comment">//        try &#123;</span></span><br><span class="line"><span class="comment">//            Runtime.getRuntime().exec(&quot;calc&quot;);</span></span><br><span class="line"><span class="comment">//        &#125; catch (IOException e) &#123;</span></span><br><span class="line"><span class="comment">//            throw new RuntimeException(e);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">        <span class="built_in">this</span>.age=age;</span><br><span class="line">        System.out.println(<span class="string">&quot;公共二参：&quot;</span>+name+<span class="string">&quot;+&quot;</span>+age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Person</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;私有一参：&quot;</span>+name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 2、静态代码块隐式执行</span></span><br><span class="line"><span class="comment">         * =打印的时候弹窗</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line"><span class="comment">//        try &#123;</span></span><br><span class="line"><span class="comment">//            Runtime.getRuntime().exec(&quot;calc&quot;);</span></span><br><span class="line"><span class="comment">//        &#125; catch (IOException e) &#123;</span></span><br><span class="line"><span class="comment">//            throw new RuntimeException(e);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, nums=&#x27;&quot;</span> + nums + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Person&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, nums=&#x27;&quot;</span> + nums + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">pri_test</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;私有单参方法&quot;</span>+a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">pri_test</span><span class="params">(<span class="type">int</span> a,String b)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;私有双参方法&quot;</span>+a+<span class="string">&quot;+&quot;</span>+b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pub_test</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公共无参方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pub_test</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公共单参方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pub_test</span><span class="params">(<span class="type">int</span> a,String b)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公共双参方法&quot;</span>+a+<span class="string">&quot;+&quot;</span>+b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pub_test</span><span class="params">(String a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公共双参方法&quot;</span>+a+<span class="string">&quot;+&quot;</span>+b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 原理是竞争反序列化函数里面的一个方法 readObject 从而执行</span></span><br><span class="line"><span class="comment">     * 反编译代码测试</span></span><br><span class="line"><span class="comment">     * =反序列化的时候弹窗</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(ObjectInputStream ois)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">// 执行恶意代码</span></span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">&quot;notepad&quot;</span>);</span><br><span class="line">        <span class="comment">//指向正确的readObject,这样就可以正常反序列化（了解）</span></span><br><span class="line">        ois.defaultReadObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>利用 HashMap 类的方法 readobject（）结合 URL 类带出</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 当入口参数包含 readObject 也会同重写对象 readObject 方法一样执行</span></span><br><span class="line"><span class="comment"> * 比如HashMap</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 方法调用如下：</span></span><br><span class="line"><span class="comment"> * Gadget Chain:</span></span><br><span class="line"><span class="comment"> *  HashMap.readobject()</span></span><br><span class="line"><span class="comment"> *   HashMap.putVal()</span></span><br><span class="line"><span class="comment"> *    HashMap.hakh()</span></span><br><span class="line"><span class="comment"> *     URL.hashCode()   访问 url 路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">HashMap&lt;URL,Integer&gt; map_=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">URL url=<span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://temple.dnslog.cn&quot;</span>);</span><br><span class="line">map_.put(url,<span class="number">1</span>);</span><br><span class="line">String path2=<span class="string">&quot;url.txt&quot;</span>;</span><br><span class="line"><span class="comment">//序列化与反序列化</span></span><br><span class="line">Serializable(map_,path2);</span><br><span class="line">UnSerializable(path2);</span><br></pre></td></tr></table></figure><h3 id="安全问题-2"><a href="#安全问题-2" class="headerlink" title="安全问题"></a>安全问题</h3><p><strong>1、</strong> 上面就是围绕漏洞来展开的，但是是可以防御的。比如</p><blockquote><p>不使用原生的序列化<br>使用更安全的json或xml<br>使用白名单<br>输入验证<br>最小化使用（尽量不使用）<br>权限最小化（确保应用程序以最小的必要权限运行）等<br>及时更新程序以及安装补丁</p></blockquote><p>（如有不恰当的地方欢迎指正哦 ~o(●’◡’●)o）</p><hr><p><strong><font color="red">参考blogs：</font></strong></p><p>【<a href="https://blog.csdn.net/qq_43610304/article/details/102175852">servlet的映射与在idea中的使用</a>】</p><p>【<a href="https://blog.csdn.net/qq_53316135/article/details/118978304">JDBC 驱动加载原理解析</a>】</p><p>【<a href="https://blog.csdn.net/qq_21484461/article/details/134324225">【Java 进阶篇】Java Listener 使用详解</a>】</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;b站小迪23年网安基础课程，28节——31节，java简单回顾（1）&lt;/p&gt;</summary>
    
    
    
    <category term="课堂" scheme="https://www.hfqing.top/categories/%E8%AF%BE%E5%A0%82/"/>
    
    <category term="笔记" scheme="https://www.hfqing.top/categories/%E8%AF%BE%E5%A0%82/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="网课小迪" scheme="https://www.hfqing.top/tags/%E7%BD%91%E8%AF%BE%E5%B0%8F%E8%BF%AA/"/>
    
    <category term="温习" scheme="https://www.hfqing.top/tags/%E6%B8%A9%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>小迪23年-28~31——js简单回顾</title>
    <link href="https://www.hfqing.top/2025/08/02/%E5%B0%8F%E8%BF%AA23%E5%B9%B4-28~31%E2%80%94%E2%80%94js%E7%AE%80%E5%8D%95%E5%9B%9E%E9%A1%BE/"/>
    <id>https://www.hfqing.top/2025/08/02/%E5%B0%8F%E8%BF%AA23%E5%B9%B4-28~31%E2%80%94%E2%80%94js%E7%AE%80%E5%8D%95%E5%9B%9E%E9%A1%BE/</id>
    <published>2025-08-02T15:01:36.000Z</published>
    <updated>2025-09-13T08:38:30.694Z</updated>
    
    <content type="html"><![CDATA[<p>b站小迪23年网安基础课程，28节——31节，js简单回顾</p><span id="more"></span><h1 id="前端-js开发"><a href="#前端-js开发" class="headerlink" title="前端-js开发"></a>前端-js开发</h1><blockquote><p>课堂完结后欲复习巩固也方便后续-重游-故写此篇<br>从实现功能过渡到涉及的相关知识点</p></blockquote><table><tr><td bgcolor=DarkSeaGreen>知识点</td></tr></table><p><strong>1、</strong> JS 是前端语言，是可以被浏览器“看到”的，当然也可以被修改啊，被浏览器禁用网页的 JS 功能啊之类的。所以一般都是前后端分离开发，前端只负责显示与提醒用户。</p><p><strong>2、</strong> JS 是可以在浏览器里调试的，断点之类的都行，浏览器里也有控制台可以执行命令。</p><p><strong>3、</strong> 浏览器不可能看到所有的 JS 文件，但是断点也带来了其他可能，只要断在你想知道参数的地方，那么没有显示的 JS 文件也不行影响到你，毕竟你只需要它们运行而非一定得拿到源码。</p><h2 id="登录验证"><a href="#登录验证" class="headerlink" title="登录验证"></a>登录验证</h2><blockquote><p>简单流程：（最初实验版）前端 js 发送用户名和密码给后端，后端判断是否正确后返回参数，js依据参数决定是否进行页面跳转与弹窗</p></blockquote><p><strong><font color="green">分析问题：</font></strong></p><p><strong>1、</strong> 前端语言是可以看到的，是可以被改变的，所以不能给前端跳转页面的权力，只能做提醒，不然会导致安全问题。</p><blockquote><p>前端语言应只供展示与简单提醒</p></blockquote><p><em><strong>Code:</strong></em><br>前端 js 部分代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- </span><br><span class="line"></span><br><span class="line">采用js传输，php验证</span><br><span class="line"></span><br><span class="line"> --&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">        &lt;h3&gt;用户登录&lt;/h3&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;label <span class="keyword">for</span>=<span class="string">&quot;username&quot;</span>&gt;用户名：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">&quot;text&quot;</span> <span class="class"><span class="keyword">class</span>=&quot;<span class="title">username</span>&quot; <span class="title">name</span>=&quot;<span class="title">username</span>&quot; <span class="title">required</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt;&lt;<span class="title">br</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">password</span>&quot;&gt;密码：&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">password</span>&quot; <span class="title">class</span>=&quot;<span class="title">password</span>&quot; <span class="title">name</span>=&quot;<span class="title">password</span>&quot; <span class="title">required</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt;&lt;<span class="title">br</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">button</span>&gt;登录&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;!-- //导入<span class="title">jquery</span> --&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;./<span class="title">js</span>/<span class="title">js</span>/<span class="title">jquery</span>-3.7.1.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;!-- 都是键值对！！！ --&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">$(&#x27;<span class="title">button</span>&#x27;).<span class="title">click</span>(<span class="title">function</span>()</span>&#123;</span><br><span class="line">$.<span class="title function_ invoke__">ajax</span>(&#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">&quot;check_login.php&quot;</span>,</span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line"><span class="attr">user</span>:$(<span class="string">&#x27;.username&#x27;</span>).<span class="title function_ invoke__">val</span>(),</span><br><span class="line">passwd:$(<span class="string">&#x27;.password&#x27;</span>).<span class="title function_ invoke__">val</span>()</span><br><span class="line">&#125;,</span><br><span class="line">type: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">console.<span class="title function_ invoke__">log</span>(data);</span><br><span class="line"><span class="keyword">if</span>(data.info==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">alert</span>(<span class="string">&#x27;登陆成功！&#x27;</span>);</span><br><span class="line"><span class="comment">// location.href=&quot;index.php&quot;;</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 安全漏洞出现，原因：前端代码不可进行操作，只需要提示就可以了</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 小写，哦~*/</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">console.<span class="title function_ invoke__">log</span>(<span class="string">&#x27;登陆失败！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">error: <span class="function"><span class="keyword">function</span>(<span class="params">text</span>) </span>&#123;</span><br><span class="line"><span class="title function_ invoke__">alert</span>(<span class="string">&#x27;登陆失败！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><blockquote><p>简单流程：前端 js 判断文件格式等是否正确，然后发送给后端 php 进一步处理文件。<br>简单模拟了已下前端部分，并没有写后端 php。</p></blockquote><p><strong><font color="green">分析问题：</font></strong></p><p><strong>1、</strong> 前端先做第一步判断减轻服务器压力，但是也容易被绕过，所以后端还是得判断一次（也许可以优化法子？）</p><p><strong>2、</strong> 但是并没有赋予前端任何权利并没有安全问题，压力给到后端。</p><p><em><strong>Code：</strong></em><br>前端部分 js 代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">upload</span>-<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">h2</span>&gt;上传文件&lt;/<span class="title">h2</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">form</span> <span class="title">action</span>=&quot;<span class="title">upload</span>.<span class="title">php</span>&quot; <span class="title">method</span>=&quot;<span class="title">post</span>&quot; <span class="title">enctype</span>=&quot;<span class="title">multipart</span>/<span class="title">form</span>-<span class="title">data</span>&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">file</span>&quot; <span class="title">name</span>=&quot;<span class="title">fileToUpload</span>&quot; <span class="title">id</span>=&quot;<span class="title">file</span>&quot;  <span class="title">onchange</span>=&quot;<span class="title">check_upload</span>(<span class="title">this</span>.<span class="title">value</span>)&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">button</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot;&gt;上传文件&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;!-- 使用<span class="title">js</span>来实现前端的文件格式过滤 --&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">    //文件后缀白名单</span></span><br><span class="line"><span class="class">    <span class="title">let</span> <span class="title">list_write</span>=[&#x27;<span class="title">jpg</span>&#x27;,&#x27;<span class="title">png</span>&#x27;,&#x27;<span class="title">gif</span>&#x27;,&#x27;<span class="title">jpeg</span>&#x27;,&#x27;<span class="title">webp</span>&#x27;];</span></span><br><span class="line"><span class="class">    //文件上传时发生改变触发方法</span></span><br><span class="line"><span class="class">    <span class="title">function</span> <span class="title">check_upload</span>(<span class="title">file_name</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//取出后缀</span></span><br><span class="line">        let idx=file_name.<span class="title function_ invoke__">lastIndexOf</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        let val=file_name.<span class="title function_ invoke__">substring</span>(idx+<span class="number">1</span>,file_name.length);</span><br><span class="line">        <span class="keyword">if</span>(list_write.<span class="title function_ invoke__">indexOf</span>(val)!=-<span class="number">1</span>)&#123;</span><br><span class="line">            console.<span class="title function_ invoke__">log</span>(<span class="string">&#x27;文件格式无误&#x27;</span>);</span><br><span class="line">            <span class="comment">//将文件发送后端……</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//刷新网页取消文件输入</span></span><br><span class="line">            location.<span class="title function_ invoke__">reload</span>(<span class="literal">true</span>);</span><br><span class="line">            <span class="title function_ invoke__">alert</span>(<span class="string">&#x27;文件格式有误&#x27;</span>);    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="打包器webpack"><a href="#打包器webpack" class="headerlink" title="打包器webpack"></a>打包器webpack</h2><blockquote><p>基本的目录结构如下：</p><hr><p>D:\VSCODE\WEBPACK-DEMO<br>│ package.json（版本控制及脚本配置）<br>│ webpack.config.js（配置文件）<br>│<br>├─dist（打包后的成品code）<br>├─node_modules（依赖包）<br>└─src（存自己写的code）<br>&nbsp;&nbsp;&nbsp;├─index.html<br>&nbsp;&nbsp;&nbsp;└─index.js</p></blockquote><p><strong><font color="green">接下来通过简单使用来复习功能，并引入其作用。</font></strong></p><blockquote><p>开始之前先复习一下其概念：<br>Webpack 是一个现代 JavaScript 应用程序的静态模块打包工具。它分析项目结构，找到 JavaScript 模块以及其他一些浏览器不能直接运行的扩展语言（如 Scss，TypeScript 等），并将其转换和打包为合适的格式供浏览器使用。</p><hr><p>然后使其使用与感悟：<br>就举个最简单的 js 方面的例子：一个html页面可能需要引入非常多的 js 文件，不但太多了不好维护，也会导致访问的速度变慢，为了解决这一问题，可以用打包器 webpack 将任意多个 js 文件打包成一个或几个 js 文件。流程大致如下：<br>1、打包器分析 js 文件之间的依赖关系（通过<code>import</code>&#x2F;<code>require</code>语句）<br>2、构建依赖图<br>3、打包、优化、合并成一&#x2F;几个 JS 文件</p></blockquote><p><strong>一、</strong> 新建文件夹 ‘js’，存放两个 js 文件<br>代码分别如下:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">divide</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a-b;</span><br><span class="line">&#125;</span><br><span class="line">export <span class="keyword">default</span> divide;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>二、</strong> 在 src 目录下新建一个 JS 文件用于联系多个 JS 文件（上面两）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import one <span class="keyword">from</span> <span class="string">&#x27;../js/_1&#x27;</span>;</span><br><span class="line">import two <span class="keyword">from</span> <span class="string">&#x27;../js/_2&#x27;</span>;</span><br><span class="line"></span><br><span class="line">console.<span class="title function_ invoke__">log</span>(<span class="title function_ invoke__">one</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">console.<span class="title function_ invoke__">log</span>(<span class="title function_ invoke__">two</span>(<span class="number">1</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure><p><strong>三、</strong> 配置 webpack.config.js 文件如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">path</span> = <span class="keyword">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">    mode:<span class="string">&quot;development&quot;</span>,<span class="comment">//开发模式</span></span><br><span class="line">    <span class="comment">// mode:&quot;production&quot; 生产模式</span></span><br><span class="line">    entry: <span class="string">&#x27;./src/index.js&#x27;</span>,<span class="comment">//入口文件</span></span><br><span class="line">    output: &#123;</span><br><span class="line">        filename: <span class="string">&#x27;bundle.js&#x27;</span>,<span class="comment">//结果文件</span></span><br><span class="line">        path: path.<span class="title function_ invoke__">resolve</span>(__dirname, <span class="string">&#x27;dist&#x27;</span>)<span class="comment">//结果文件的位置</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><tr><td bgcolor=DarkSeaGreen>知识点</td></tr></table><p><strong>1、</strong> 上面配置 code 中的 mode<br>&nbsp;&nbsp;&nbsp;&nbsp;开发模式用于网站开发过程中，生产模式用于网站部署后。至于弄混会咋样，如图，源码漏泄给浏览器</p><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/dd7941805cd2e10a8bcdbb7e99ef8d9e.png" alt="源码泄露"></p><p><strong>四、</strong> 执行打包命令</p><blockquote><p>首先在 <code>package.json</code>文件里添加下面代码，然后移动终端的路径到webpack根目录下，运行命令<code>npm run build</code></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;build&quot;</span>:<span class="string">&quot;webpack&quot;</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><em><strong>这里也贴上两种模式产生的结果 JS 文件代价量的区别</strong></em></p><p><strong>生产模式code：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(()=&gt;&#123;<span class="string">&quot;use strict&quot;</span>;console.<span class="title function_ invoke__">log</span>(<span class="number">1</span>-<span class="number">2</span>),console.<span class="title function_ invoke__">log</span>(<span class="number">3</span>)&#125;)();</span><br></pre></td></tr></table></figure><p><strong>开发模式code：</strong><br><del><em>是的，1行和100行的区别</em></del></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ATTENTION: The &quot;eval&quot; devtool has been used (maybe by default in mode: &quot;development&quot;).</span></span><br><span class="line"><span class="comment"> * This devtool is neither made for production nor for readable output files.</span></span><br><span class="line"><span class="comment"> * It uses &quot;eval()&quot; calls to create a separate source file in the browser devtools.</span></span><br><span class="line"><span class="comment"> * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)</span></span><br><span class="line"><span class="comment"> * or disable the default devtool with &quot;devtool: false&quot;.</span></span><br><span class="line"><span class="comment"> * If you are looking for production-ready output files, see mode: &quot;production&quot; (https://webpack.js.org/configuration/mode/).</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/******/</span> (() =&gt; &#123; <span class="comment">// webpackBootstrap</span></span><br><span class="line"><span class="comment">/******/</span> <span class="string">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="comment">/******/</span> <span class="keyword">var</span> __webpack_modules__ = (&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***/</span> <span class="string">&quot;./js/_1.js&quot;</span>:</span><br><span class="line"><span class="comment">/*!******************!*\</span></span><br><span class="line"><span class="comment">  !*** ./js/_1.js ***!</span></span><br><span class="line"><span class="comment">  \******************/</span></span><br><span class="line"><span class="comment">/***/</span> ((__unused_webpack_module, __webpack_exports__, __webpack_require__) =&gt; &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;&#123;__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, &#123;\n/* harmony export */   \&quot;default\&quot;: () =&gt; (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ &#125;);\nfunction divide(a,b)&#123;\r\n    return a-b;\r\n&#125;\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (divide);\n\n//# sourceURL=webpack:///./js/_1.js?\n&#125;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/***/</span> &#125;),</span><br><span class="line"></span><br><span class="line"><span class="comment">/***/</span> <span class="string">&quot;./js/_2.js&quot;</span>:</span><br><span class="line"><span class="comment">/*!******************!*\</span></span><br><span class="line"><span class="comment">  !*** ./js/_2.js ***!</span></span><br><span class="line"><span class="comment">  \******************/</span></span><br><span class="line"><span class="comment">/***/</span> ((__unused_webpack_module, __webpack_exports__, __webpack_require__) =&gt; &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;&#123;__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, &#123;\n/* harmony export */   \&quot;default\&quot;: () =&gt; (/* binding */ add)\n/* harmony export */ &#125;);\nfunction add(a,b)&#123;\r\n    return a+b;\r\n&#125;\n\n//# sourceURL=webpack:///./js/_2.js?\n&#125;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/***/</span> &#125;),</span><br><span class="line"></span><br><span class="line"><span class="comment">/***/</span> <span class="string">&quot;./src/index.js&quot;</span>:</span><br><span class="line"><span class="comment">/*!**********************!*\</span></span><br><span class="line"><span class="comment">  !*** ./src/index.js ***!</span></span><br><span class="line"><span class="comment">  \**********************/</span></span><br><span class="line"><span class="comment">/***/</span> ((__unused_webpack_module, __webpack_exports__, __webpack_require__) =&gt; &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;&#123;__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../js/_1 */ \&quot;./js/_1.js\&quot;);\n/* harmony import */ var _js_2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../js/_2 */ \&quot;./js/_2.js\&quot;);\n\r\n\r\n\r\nconsole.log((0,_js_1__WEBPACK_IMPORTED_MODULE_0__[\&quot;default\&quot;])(1,2))\r\nconsole.log((0,_js_2__WEBPACK_IMPORTED_MODULE_1__[\&quot;default\&quot;])(1,2))\n\n//# sourceURL=webpack:///./src/index.js?\n&#125;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/***/</span> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/******/</span> &#125;);</span><br><span class="line"><span class="comment">/************************************************************************/</span></span><br><span class="line"><span class="comment">/******/</span> <span class="comment">// The module cache</span></span><br><span class="line"><span class="comment">/******/</span> <span class="keyword">var</span> __webpack_module_cache__ = &#123;&#125;;</span><br><span class="line"><span class="comment">/******/</span> </span><br><span class="line"><span class="comment">/******/</span> <span class="comment">// The require function</span></span><br><span class="line"><span class="comment">/******/</span> <span class="function"><span class="keyword">function</span> <span class="title">__webpack_require__</span>(<span class="params">moduleId</span>) </span>&#123;</span><br><span class="line"><span class="comment">/******/</span> <span class="comment">// Check if module is in cache</span></span><br><span class="line"><span class="comment">/******/</span> <span class="keyword">var</span> cachedModule = __webpack_module_cache__[moduleId];</span><br><span class="line"><span class="comment">/******/</span> <span class="keyword">if</span> (cachedModule !== undefined) &#123;</span><br><span class="line"><span class="comment">/******/</span> <span class="keyword">return</span> cachedModule.exports;</span><br><span class="line"><span class="comment">/******/</span> &#125;</span><br><span class="line"><span class="comment">/******/</span> <span class="comment">// Create a new module (and put it into the cache)</span></span><br><span class="line"><span class="comment">/******/</span> <span class="keyword">var</span> module = __webpack_module_cache__[moduleId] = &#123;</span><br><span class="line"><span class="comment">/******/</span> <span class="comment">// no module.id needed</span></span><br><span class="line"><span class="comment">/******/</span> <span class="comment">// no module.loaded needed</span></span><br><span class="line"><span class="comment">/******/</span> exports: &#123;&#125;</span><br><span class="line"><span class="comment">/******/</span> &#125;;</span><br><span class="line"><span class="comment">/******/</span> </span><br><span class="line"><span class="comment">/******/</span> <span class="comment">// Execute the module function</span></span><br><span class="line"><span class="comment">/******/</span> __webpack_modules__[moduleId](module, module.exports, __webpack_require__);</span><br><span class="line"><span class="comment">/******/</span> </span><br><span class="line"><span class="comment">/******/</span> <span class="comment">// Return the exports of the module</span></span><br><span class="line"><span class="comment">/******/</span> <span class="keyword">return</span> module.exports;</span><br><span class="line"><span class="comment">/******/</span> &#125;</span><br><span class="line"><span class="comment">/******/</span> </span><br><span class="line"><span class="comment">/************************************************************************/</span></span><br><span class="line"><span class="comment">/******/</span> <span class="comment">/* webpack/runtime/define property getters */</span></span><br><span class="line"><span class="comment">/******/</span> (() =&gt; &#123;</span><br><span class="line"><span class="comment">/******/</span> <span class="comment">// define getter functions for harmony exports</span></span><br><span class="line"><span class="comment">/******/</span> __webpack_require__.d = (exports, definition) =&gt; &#123;</span><br><span class="line"><span class="comment">/******/</span> <span class="keyword">for</span>(<span class="keyword">var</span> key in definition) &#123;</span><br><span class="line"><span class="comment">/******/</span> <span class="keyword">if</span>(__webpack_require__.<span class="title function_ invoke__">o</span>(definition, key) &amp;&amp; !__webpack_require__.<span class="title function_ invoke__">o</span>(exports, key)) &#123;</span><br><span class="line"><span class="comment">/******/</span> Object.<span class="title function_ invoke__">defineProperty</span>(exports, key, &#123; <span class="attr">enumerable</span>: <span class="literal">true</span>, <span class="attr">get</span>: definition[key] &#125;);</span><br><span class="line"><span class="comment">/******/</span> &#125;</span><br><span class="line"><span class="comment">/******/</span> &#125;</span><br><span class="line"><span class="comment">/******/</span> &#125;;</span><br><span class="line"><span class="comment">/******/</span> &#125;)();</span><br><span class="line"><span class="comment">/******/</span> </span><br><span class="line"><span class="comment">/******/</span> <span class="comment">/* webpack/runtime/hasOwnProperty shorthand */</span></span><br><span class="line"><span class="comment">/******/</span> (() =&gt; &#123;</span><br><span class="line"><span class="comment">/******/</span> __webpack_require__.o = (obj, prop) =&gt; (Object.prototype.hasOwnProperty.<span class="title function_ invoke__">call</span>(obj, prop))</span><br><span class="line"><span class="comment">/******/</span> &#125;)();</span><br><span class="line"><span class="comment">/******/</span> </span><br><span class="line"><span class="comment">/******/</span> <span class="comment">/* webpack/runtime/make namespace object */</span></span><br><span class="line"><span class="comment">/******/</span> (() =&gt; &#123;</span><br><span class="line"><span class="comment">/******/</span> <span class="comment">// define __esModule on exports</span></span><br><span class="line"><span class="comment">/******/</span> __webpack_require__.r = (exports) =&gt; &#123;</span><br><span class="line"><span class="comment">/******/</span> <span class="keyword">if</span>(typeof Symbol !== <span class="string">&#x27;undefined&#x27;</span> &amp;&amp; Symbol.toStringTag) &#123;</span><br><span class="line"><span class="comment">/******/</span> Object.<span class="title function_ invoke__">defineProperty</span>(exports, Symbol.toStringTag, &#123; <span class="attr">value</span>: <span class="string">&#x27;Module&#x27;</span> &#125;);</span><br><span class="line"><span class="comment">/******/</span> &#125;</span><br><span class="line"><span class="comment">/******/</span> Object.<span class="title function_ invoke__">defineProperty</span>(exports, <span class="string">&#x27;__esModule&#x27;</span>, &#123; <span class="attr">value</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"><span class="comment">/******/</span> &#125;;</span><br><span class="line"><span class="comment">/******/</span> &#125;)();</span><br><span class="line"><span class="comment">/******/</span> </span><br><span class="line"><span class="comment">/************************************************************************/</span></span><br><span class="line"><span class="comment">/******/</span> </span><br><span class="line"><span class="comment">/******/</span> <span class="comment">// startup</span></span><br><span class="line"><span class="comment">/******/</span> <span class="comment">// Load entry module and return exports</span></span><br><span class="line"><span class="comment">/******/</span> <span class="comment">// This entry module can&#x27;t be inlined because the eval devtool is used.</span></span><br><span class="line"><span class="comment">/******/</span> <span class="keyword">var</span> __webpack_exports__ = <span class="title function_ invoke__">__webpack_require__</span>(<span class="string">&quot;./src/index.js&quot;</span>);</span><br><span class="line"><span class="comment">/******/</span> </span><br><span class="line"><span class="comment">/******/</span> &#125;)()</span><br><span class="line">;</span><br></pre></td></tr></table></figure><hr><h2 id="express实现服务端"><a href="#express实现服务端" class="headerlink" title="express实现服务端"></a>express实现服务端</h2><blockquote><p>服务器，也就是访问特定ip与端口会返回特定数据<br>由此<br>1、模拟网页刷新（渲染特定网页）<br>2、模拟网页传输用户名密码需要连接数据库并返回结果<br>3、依据get、post方式不同返回不同（路由）</p></blockquote><p>由于是简单模拟，所以都集合在了一个<code>server.js</code>里，还有一个返回&#x2F;渲染网页用的html文件。</p><p><strong>html 文件为渲染用登录页面，code：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: sans-serif;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login-form</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.error-message</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://127.0.0.1:3001/login&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;username&quot;</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password&quot;</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong><code>server.js</code>文件code：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入模块</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line"><span class="comment">// 创建一个express应用</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 定义端口号</span></span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3001</span>;</span><br><span class="line"><span class="comment">// 提供静态文件服务</span></span><br><span class="line"><span class="comment">// app.use(express.static(&#x27;public&#x27;));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析 application/x-www-form-urlencoded 数据</span></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始页面</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// res.send(&#x27;GET请求成功！&#x27;);</span></span><br><span class="line">    <span class="comment">//还可以渲染（返回）html文件！！</span></span><br><span class="line">    res.<span class="title function_">sendFile</span>(__dirname+<span class="string">&quot;/html/login.html&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1、get 方式传输表单数据</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/login&#x27;</span>,<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//参数获取</span></span><br><span class="line">    <span class="keyword">const</span> u=req.<span class="property">query</span>.<span class="property">username</span>;</span><br><span class="line">    <span class="keyword">const</span> p=req.<span class="property">query</span>.<span class="property">password</span>;</span><br><span class="line">    <span class="comment">//连接数据库……</span></span><br><span class="line">    <span class="comment">//判断</span></span><br><span class="line">    <span class="keyword">if</span>(u==<span class="string">&quot;admin&quot;</span> &amp;&amp; p==<span class="string">&quot;123456&quot;</span>)&#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;欢迎管理员！get&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;闲杂人等不得入内！get&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 2、post 方式传输表单数据</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>,<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//参数获取</span></span><br><span class="line">    <span class="keyword">const</span> u=req.<span class="property">body</span>.<span class="property">username</span>;</span><br><span class="line">    <span class="keyword">const</span> p=req.<span class="property">body</span>.<span class="property">password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数据库设置</span></span><br><span class="line">    <span class="keyword">const</span> connection = mysql.<span class="title function_">createConnection</span>(&#123;</span><br><span class="line">      host     : <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">      user     : <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">      password : <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">      database : <span class="string">&#x27;user_all&#x27;</span>,</span><br><span class="line">      port     :<span class="string">&#x27;3307&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">     <span class="comment">//连接数据库</span></span><br><span class="line">    connection.<span class="title function_">connect</span>(<span class="function">(<span class="params">error</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(error)&#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接失败&quot;</span>);</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接成功&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">     <span class="comment">//语句</span></span><br><span class="line">    <span class="keyword">let</span> sentence=<span class="string">&#x27;SELECT * FROM admin where username=&quot;&#x27;</span>+u+<span class="string">&#x27;&quot; and password=&quot;&#x27;</span>+p+<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(sentence);</span><br><span class="line">    connection.<span class="title function_">query</span>(sentence, <span class="function">(<span class="params">error, results, fields</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(error)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;数据库连接失败&quot;</span>)&#125;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(results);</span><br><span class="line">      <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">//判断</span></span><br><span class="line">            <span class="keyword">if</span>(u==results[<span class="number">0</span>][<span class="string">&quot;username&quot;</span>] &amp;&amp; p==results[<span class="number">0</span>][<span class="string">&quot;password&quot;</span>])&#123;</span><br><span class="line">                res.<span class="title function_">send</span>(<span class="string">&quot;欢迎管理员！post&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                res.<span class="title function_">send</span>(<span class="string">&quot;闲杂人等不得入内！post&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">      &#125;<span class="keyword">catch</span>&#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;语句有误！&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// //判断</span></span><br><span class="line">    <span class="comment">// if(u==&quot;admin&quot; &amp;&amp; p==&quot;123456&quot;)&#123;</span></span><br><span class="line">    <span class="comment">//     res.send(&quot;欢迎管理员！post&quot;);</span></span><br><span class="line">    <span class="comment">// &#125;else&#123;</span></span><br><span class="line">    <span class="comment">//     res.send(&quot;闲杂人等不得入内！post&quot;);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动服务器并监听指定端口</span></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server is running on http://localhost:<span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>（如有不恰当的地方欢迎指正哦 ~o(●’◡’●)o）</p><hr><p><strong><font color="red">参考blogs：</font></strong></p><p>【<a href="https://blog.csdn.net/2301_78542842/article/details/138397841">webpack超详细教程，学webpack看这一篇就够了！（上）</a>】</p><p>【<a href="https://blog.csdn.net/lph159/article/details/142381712#1__7">【Webpack】三种模式详解</a>】</p><p>【<a href="https://blog.csdn.net/qq_25927437/article/details/85785533">Webpack三种打包方式：（以下所有命令都是windows下执行的）</a>】</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;b站小迪23年网安基础课程，28节——31节，js简单回顾&lt;/p&gt;</summary>
    
    
    
    <category term="课堂" scheme="https://www.hfqing.top/categories/%E8%AF%BE%E5%A0%82/"/>
    
    <category term="笔记" scheme="https://www.hfqing.top/categories/%E8%AF%BE%E5%A0%82/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="网课小迪" scheme="https://www.hfqing.top/tags/%E7%BD%91%E8%AF%BE%E5%B0%8F%E8%BF%AA/"/>
    
    <category term="温习" scheme="https://www.hfqing.top/tags/%E6%B8%A9%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>小迪23年-22~27——php简单回顾（2）</title>
    <link href="https://www.hfqing.top/2025/08/02/%E5%B0%8F%E8%BF%AA23%E5%B9%B4-22~27%E2%80%94%E2%80%94php%E7%AE%80%E5%8D%95%E5%9B%9E%E9%A1%BE%EF%BC%882%EF%BC%89/"/>
    <id>https://www.hfqing.top/2025/08/02/%E5%B0%8F%E8%BF%AA23%E5%B9%B4-22~27%E2%80%94%E2%80%94php%E7%AE%80%E5%8D%95%E5%9B%9E%E9%A1%BE%EF%BC%882%EF%BC%89/</id>
    <published>2025-08-02T03:45:48.000Z</published>
    <updated>2025-09-13T08:38:31.889Z</updated>
    
    <content type="html"><![CDATA[<p>b站小迪23年网安基础课程，22节——27节，php简单回顾（2）</p><span id="more"></span><h1 id="非原生开发"><a href="#非原生开发" class="headerlink" title="非原生开发"></a>非原生开发</h1><blockquote><p>课堂完结后欲复习巩固也方便后续-重游-故写此篇<br>从实现功能过渡到涉及的相关知识点</p></blockquote><h2 id="前端模板功能"><a href="#前端模板功能" class="headerlink" title="前端模板功能"></a>前端模板功能</h2><blockquote><p>1、有点前后端分离的思想。写好前端模板代码后由后端语言去替换相应的部分达到模板的作用。一般有两种实现实现方式：原生与第三方。<br>2、code比如<code>&lt;h1 class=&quot;news-title&quot;&gt;第&#123;nums&#125;个新闻：&#123;title&#125;&lt;/h1&gt;</code>（原生实现）<br>3、简单流程：引入模板 -&gt; 导入数据库数据 -&gt; 创建要替换的模板变量与替换值的对应关系 -&gt; 依据关系赋值给指定模板（第1、2步可换位置）</p></blockquote><h3 id="原生"><a href="#原生" class="headerlink" title="原生"></a>原生</h3><table><tr><td bgcolor=DarkSeaGreen>知识点</td></tr></table><p><strong>1、</strong> 前端模板代码就和普通html一样写，就是在需要替换的地方换成<code>&#123;only_name&#125;</code>就想上面一样。</p><p><strong>2、</strong> 想要在 php 语言中实现框架的识别与引入，在替换前就得先设置好路径，语法如下:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//想写好模板，然后替换并在这里显示（执行eval</span></span><br><span class="line"><span class="variable">$template</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;realative_path/name_framework.html&quot;</span>);</span><br><span class="line"><span class="comment">//替换结束后还需要执行下面语句</span></span><br><span class="line"><span class="comment">//输出值将被赋给指定的模板变量</span></span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;?&gt;&quot;</span>.<span class="variable">$template</span>);</span><br></pre></td></tr></table></figure><hr><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><p>原生简单模拟的代码并不复杂，如下:</p><p><em>index.html</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>新闻页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: Arial, sans-serif;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#f4f4f9</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-article</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">4px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-header</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#007bff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-title</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-author</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-content</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news-image</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;news-article&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;news-header&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;news-title&quot;</span>&gt;</span>第&#123;nums&#125;个新闻：&#123;title&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;news-author&quot;</span>&gt;</span>作者：&#123;author&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&#123;img&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片&quot;</span> <span class="attr">class</span>=<span class="string">&quot;news-image&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;news-content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;content&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>index.php</em> 如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//链接数据库</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../config.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//想写好模板，然后替换并在这里显示（执行eval</span></span><br><span class="line"><span class="variable">$template</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;./index.html&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//语句</span></span><br><span class="line"><span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>] ?? <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line"><span class="variable">$sentence</span>=<span class="string">&quot;select * from news where id=<span class="subst">$id</span>&quot;</span>;</span><br><span class="line"><span class="comment">//执行并接收返回</span></span><br><span class="line"><span class="keyword">if</span>(!(<span class="variable">$news</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$mysqli_connect</span>,<span class="variable">$sentence</span>)))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;数据库链接失败！&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//显示</span></span><br><span class="line"><span class="variable">$search</span>=[<span class="string">&quot;&#123;nums&#125;&quot;</span>,<span class="string">&quot;&#123;title&#125;&quot;</span>,<span class="string">&quot;&#123;author&#125;&quot;</span>,<span class="string">&quot;&#123;content&#125;&quot;</span>,<span class="string">&quot;&#123;img&#125;&quot;</span>];</span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$rows</span>=<span class="title function_ invoke__">mysqli_fetch_row</span>(<span class="variable">$news</span>)) &#123;</span><br><span class="line"><span class="comment">// echo &quot;&lt;h1&gt;标题：$rows[1]&lt;/h1&gt;&quot;;</span></span><br><span class="line"><span class="comment">// echo &quot;&lt;h3&gt;作者：$rows[2]&lt;/h3&gt;&quot;;</span></span><br><span class="line"><span class="comment">// echo &quot;&lt;div&gt;$rows[3]&lt;/div&gt;&quot;;</span></span><br><span class="line"><span class="comment">// echo &quot;&lt;img src=&#x27;$rows[4]&#x27; weight=&#x27;200&#x27; height=&#x27;400&#x27;&gt;&quot;;</span></span><br><span class="line"><span class="comment">//直接替换和执行</span></span><br><span class="line"><span class="variable">$template</span>=<span class="title function_ invoke__">str_replace</span>(<span class="variable">$search</span>, <span class="variable">$rows</span>, <span class="variable">$template</span>);</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;?&gt;&quot;</span>.<span class="variable">$template</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="安全问题"><a href="#安全问题" class="headerlink" title="安全问题"></a>安全问题</h3><p><strong>1、</strong> 分析：自写的代码并连接数据库如果对安全问题不重视，容易产生 sql注入漏洞与任意代码执行</p><hr><h2 id="第三方模板（以smarty为例）"><a href="#第三方模板（以smarty为例）" class="headerlink" title="第三方模板（以smarty为例）"></a>第三方模板（以smarty为例）</h2><blockquote><p>由于是简单使用，所以并没有了解很深，这里简单说下区别。<br>1、只需要在配置文件里设置数据库的配置就可以任意连接数据库等，自带一些过滤。<br>2、依据 smarty 语法写好的php代码在运行时会被解析成模板php文件供中间件解析与浏览器显示</p></blockquote><p>代码都是一些实验的，并没有小项目之类的，就简单说一下一些语法：</p><p><strong>1、</strong> 和原生一样的设变量 + 替换。</p><p>变量：<code>&#123;$only_name&#125;</code>，就是里面加了个 $<br>单个替换：<code>$smarty-&gt;assign(&quot;Name&quot;, &quot;开炮！&quot;, true);</code></p><p><strong>2、</strong> 这里用语法里的 display() 函数来复习运行php文件内部流程：</p><p><em>目录结构</em></p><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/7ed15e36e229f384d1abbb4d416bec91.png" alt="目录结构"></p><p><em>code：</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在代码最后调用display()，里面是前端模板以template文件为根的相对路径</span></span><br><span class="line"><span class="variable">$smarty</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="string">&#x27;index.tpl&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>当调用 <code>display()</code> 函数时，Smarty将执行以下步骤：</p><hr><p>1、尝试将传递给 <code>display()</code> 函数的模板路径解析为绝对路径。<br>2、尝试从缓存中获取已编译的模板，如果存在，则跳至第6步。<br>3、如果缓存中不存在已编译的模板，则Smarty会编译模板，生成PHP代码，并将其缓存到磁盘上。<br>4、Smarty会将编译后的代码包含在当前PHP脚本中，并执行它。<br>5、输出编译后的模板内容。<br>6、Smarty清理各种临时变量和句柄，完成页面渲染。</p></blockquote><hr><h3 id="安全问题-1"><a href="#安全问题-1" class="headerlink" title="安全问题"></a>安全问题</h3><p><strong>1、</strong> 第三方模板，如果使用的是由历史漏洞的版本那么就会发生危险，比如   CVE-2021-26120 ,smarty-3.1.38就会有这个漏洞，smarty-3.1.39就修复了。</p><p><strong>2、</strong> 如果并没有按照模板的语法来写而是自己写的话那么也可能会在一些地方产生漏洞。</p><hr><h2 id="框架（以-thinkphp-为例）"><a href="#框架（以-thinkphp-为例）" class="headerlink" title="框架（以 thinkphp 为例）"></a>框架（以 thinkphp 为例）</h2><blockquote><p>PHP Web框架是用于构建Web应用程序的工具和库集合，旨在简化开发过程，提高代码质量和开发效率。<br>也就是说不管是上篇的原生开发里的部分，还是上面的模板部分（内置有smarty），框架都可以很轻松的包含进去，并设置了特定语法，增强代码的安全性，让开发人员致力于代码开发而非其他地方。</p></blockquote><p><em>这里由-文件上传功能-和-数据库操作-来引入复习内容</em></p><h3 id="前置：路由访问（以小皮为例）"><a href="#前置：路由访问（以小皮为例）" class="headerlink" title="前置：路由访问（以小皮为例）"></a>前置：路由访问（以小皮为例）</h3><table><tr><td bgcolor=DarkSeaGreen>知识点</td></tr></table><p><strong>一、路径路由</strong></p><p><strong>1、</strong> 想要运行 thinkphp 得先在小皮里新建一个以 thinkphp&#x2F;public 为根目录的网站，访问对应 ip和端口会自动访问 public&#x2F;index.php 文件。</p><p><strong>2、</strong> 或者在 application文件里新建 &#x2F;controller&#x2F;Index.php，在里面创建index方法，那么首页也会从index方法里读取返回值并显示。</p><p><strong>3、</strong> 那么想要访问其他模板呢？</p><blockquote><p>以上面首页为例，除了默认访问之外还可以通过 “模块名&#x2F;控制器名&#x2F;方法名” 来访问，所以是<code>127.0.0.1:81/index.php/index/index/index</code>，如图，第一个 index 为 application 下的模块名，第二个index为模块下 controller 里的首字母大写（规范写法）的控制器名：Index，最后是 index.php 里的方法名 index;</p></blockquote><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/e91a13c37ec26ced51a46aff7d490358.png" alt="目录结构"></p><p><strong>二、参数路由</strong></p><p><strong>1、</strong> thinkphp 不但支持参数的 get方式传递<code>?id=1</code>，还支持路由传递<code>/id/1</code>，想实现这种方式code如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//入口</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">index</span>\<span class="title class_">controller</span>;</span><br><span class="line"><span class="comment">//引入</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Request</span>;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">//首页</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    <span class="comment">//自控显示</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">123</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//框架传递参数方式</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">param</span>(<span class="string">&#x27;name&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//原生传递参数方式</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$name</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文件上传功能"><a href="#文件上传功能" class="headerlink" title="文件上传功能"></a>文件上传功能</h3><blockquote><p>大致流程：用表单简单写一个文件上传，同样的访问路径接收，然后保存文件</p></blockquote><p><em><strong>表单：</strong></em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;/index.php/test/test/upload&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;image&quot;</span> /&gt; &lt;br&gt; </span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;上传&quot;</span> /&gt; </span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p><em><strong>接收：</strong></em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">test</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//文件上传</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 获取表单上传文件 例如上传了001.jpg</span></span><br><span class="line">        <span class="variable">$file</span> = <span class="title function_ invoke__">request</span>()-&gt;<span class="title function_ invoke__">file</span>(<span class="string">&#x27;image&#x27;</span>);</span><br><span class="line">        <span class="comment">// 移动到框架应用根目录/uploads/ 目录下</span></span><br><span class="line">        <span class="comment">//大小限制，类型限制</span></span><br><span class="line">        <span class="variable">$info</span> = <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">validate</span>([<span class="string">&#x27;size&#x27;</span>=&gt;<span class="number">156780000</span>,<span class="string">&#x27;ext&#x27;</span>=&gt;<span class="string">&#x27;jpg,png,gif&#x27;</span>])-&gt;<span class="title function_ invoke__">move</span>( <span class="string">&#x27;../uploads&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$info</span>)&#123;</span><br><span class="line">            <span class="comment">// 成功上传后 获取上传信息</span></span><br><span class="line">            <span class="comment">// 输出 jpg</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$info</span>-&gt;<span class="title function_ invoke__">getExtension</span>().<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="comment">// 输出 20160820/42a79759f284b767dfcb2a0197904287.jpg</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$info</span>-&gt;<span class="title function_ invoke__">getSaveName</span>().<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="comment">// 输出 42a79759f284b767dfcb2a0197904287.jpg</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$info</span>-&gt;<span class="title function_ invoke__">getFilename</span>(); </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 上传失败获取错误信息</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">getError</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h3><blockquote><p>也容易猜，只需配置文件里设置就好了：在 主文件下&#x2F;config&#x2F;database.php里，如下图：<br>还有就是如果需要引用数据库，那么就在上面加上 <code>use think\Db;</code> 引入就好了。</p></blockquote><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/65accfd140fa27da5dbc6d8e7be7bef4.png" alt="配置信息"></p><p><em>示例代码如下：</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">index</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//不用——全是漏洞！</span></span><br><span class="line">        <span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">        <span class="variable">$data</span>=<span class="title class_">Db</span>::<span class="title function_ invoke__">query</span>(<span class="string">&quot;select *from news where id=<span class="subst">$id</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//用一半，有漏洞</span></span><br><span class="line">        <span class="variable">$ids</span>=<span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">param</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line">        <span class="comment">// 1、安全点写法——参数通过数组形式传递，可防sql注入</span></span><br><span class="line">        <span class="variable">$data</span>=<span class="title class_">Db</span>::<span class="title function_ invoke__">query</span>(<span class="string">&quot;SELECT * FROM news WHERE id=:ids&quot;</span>,[<span class="string">&#x27;ids&#x27;</span>=&gt;<span class="variable">$ids</span>]);</span><br><span class="line">        <span class="comment">// 2、原始写法</span></span><br><span class="line">        <span class="comment">// $data=Db::query(&quot;select *from news where id=$id&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//内置写法，无漏洞（）</span></span><br><span class="line">        <span class="comment">// $id=$this-&gt;request-&gt;param(&#x27;id&#x27;);</span></span><br><span class="line">        <span class="comment">// $data=Db::table(&#x27;news&#x27;)-&gt;where(&#x27;id&#x27;,$id)-&gt;find();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// return $data;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">json</span>(<span class="variable">$data</span>);</span><br><span class="line">        <span class="comment">// return 123;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="MVC模型"><a href="#MVC模型" class="headerlink" title="MVC模型"></a>MVC模型</h3><blockquote><p>MVC 是一种 设计&#x2F;开发 模式。<br>MVC 是一种软件架构模式，将应用程序分为三个主要部分：<br>模型（Model）：负责数据的处理和业务逻辑。<br>视图（View）：负责数据的展示和用户界面。<br>控制器（Controller）：负责接收用户输入，调用模型和视图完成用户请求。</p></blockquote><p><font color="green">自我理解：</font><br>&nbsp;&nbsp;&nbsp;&nbsp;上面说路由的时候说到了如何访问，浅谈框架的时候也说明了内置有 smarty，那么如何使用 smarty呢？</p><p>&nbsp;&nbsp;&nbsp;&nbsp;市面上普遍使用的是 MVC模式，就是下图。模块里面 controller 和 view，每一个控制器都有一个 view 模块，里面就是相对应的 html 前端文件。</p><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/9c6e69aa1581aaeaec188fdbb35ef904.png" alt="MVC模式"></p><p>这里举一个 test 模块里 Test.php 控制器里 vv 方法的例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//view：框架上的html与php的配合</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vv</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 模板变量赋值</span></span><br><span class="line">    <span class="comment">// $this-&gt;assign(&#x27;name&#x27;,&#x27;ThinkPHP&#x27;);</span></span><br><span class="line">    <span class="comment">// $this-&gt;assign(&#x27;email&#x27;,&#x27;thinkphp@qq.com&#x27;);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 或者批量赋值</span></span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">assign</span>([</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>  =&gt; <span class="string">&#x27;ThinkPHP&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;email&#x27;</span> =&gt; <span class="string">&#x27;thinkphp@qq.com&#x27;</span></span><br><span class="line">    ]);</span><br><span class="line">    <span class="comment">//模板输出:默认为空就是方法名，可修改</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">fetch</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="安全问题-2"><a href="#安全问题-2" class="headerlink" title="安全问题"></a>安全问题</h3><p><strong>1、</strong> 不使用内置代码写法</p><p>&nbsp;&nbsp;&nbsp;&nbsp;比如数据库操作里接收 id 值，如果你用原生的$_GET[‘id’]的话就会有sql注入的问题。因为框架是有内部过滤的，如果不用定义语法就无法进行过滤。</p><p><strong>2、</strong> thinkphp还有老的连接数据库的语句，原理也是拼接。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;老&#x2F;危险的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最原始</span></span><br><span class="line">Db.<span class="title function_ invoke__">query</span>(<span class="string">&quot;select * from news where id=<span class="subst">$ids</span>&quot;</span>);</span><br><span class="line"><span class="comment">//升级语句,参数通过数组形式传递</span></span><br><span class="line"><span class="title class_">Db</span>::<span class="title function_ invoke__">query</span>(<span class="string">&quot;SELECT * FROM news WHERE id=:ids&quot;</span>,[<span class="string">&#x27;ids&#x27;</span>=&gt;<span class="variable">$ids</span>]);</span><br><span class="line"><span class="comment">//:ids是命名占位符，用于绑定参数，防止 SQL 注入</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;新&#x2F;安全的：<code>Db::table(&#39;news&#39;)-&gt;where(&#39;id&#39;,$id)-&gt;find();</code></p><p><strong>3、</strong> 版本漏洞</p><p>&nbsp;&nbsp;&nbsp;&nbsp;作为第三方开源的产品，可能会有历史漏洞，造成安全问题。</p><p>（如有不恰当的地方欢迎指正哦 \x7eo(●’◡’●)o）</p><hr><p><strong><font color="red">参考blogs:</font></strong></p><p>【<a href="https://blog.csdn.net/cxh20777/article/details/131188622">smarty模板中display函数的原理</a>】</p><p>【<a href="https://blog.csdn.net/weixin_33854644/article/details/92186410">PHP中使用Smarty模板目录结构配置</a>】</p><p>【<a href="https://developer.aliyun.com/article/1357149">thinkPHP框架详解+部署</a>】</p><p>【<a href="https://www.php.cn/manual/view/15734.html">smarty完全中文手册</a>】</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;b站小迪23年网安基础课程，22节——27节，php简单回顾（2）&lt;/p&gt;</summary>
    
    
    
    <category term="课堂" scheme="https://www.hfqing.top/categories/%E8%AF%BE%E5%A0%82/"/>
    
    <category term="笔记" scheme="https://www.hfqing.top/categories/%E8%AF%BE%E5%A0%82/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="网课小迪" scheme="https://www.hfqing.top/tags/%E7%BD%91%E8%AF%BE%E5%B0%8F%E8%BF%AA/"/>
    
    <category term="温习" scheme="https://www.hfqing.top/tags/%E6%B8%A9%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>小迪23年-22~27——php简单回顾（1）</title>
    <link href="https://www.hfqing.top/2025/08/01/%E5%B0%8F%E8%BF%AA23%E5%B9%B4-22~27%E2%80%94%E2%80%94php%E7%AE%80%E5%8D%95%E5%9B%9E%E9%A1%BE%EF%BC%881%EF%BC%89/"/>
    <id>https://www.hfqing.top/2025/08/01/%E5%B0%8F%E8%BF%AA23%E5%B9%B4-22~27%E2%80%94%E2%80%94php%E7%AE%80%E5%8D%95%E5%9B%9E%E9%A1%BE%EF%BC%881%EF%BC%89/</id>
    <published>2025-08-01T06:12:53.000Z</published>
    <updated>2025-09-13T08:38:32.663Z</updated>
    
    <content type="html"><![CDATA[<p>b站小迪23年网安基础课程，22节——27节，php简单回顾（1）</p><span id="more"></span><h1 id="原生开发"><a href="#原生开发" class="headerlink" title="原生开发"></a>原生开发</h1><blockquote><p>课堂完结后欲复习巩固也方便后续-重游-故写此篇<br>从实现功能过渡到涉及的相关知识点</p></blockquote><h2 id="留言板功能"><a href="#留言板功能" class="headerlink" title="留言板功能"></a>留言板功能</h2><blockquote><p>简单流程：浏览器访问 -&gt; 后端php代码接收、处理请求，并连接数据库查询 -&gt; 数据库返回数据给php -&gt; 后端响应数据给浏览器</p></blockquote><table><tr><td bgcolor=DarkSeaGreen>知识点</td></tr></table><p><strong>1、</strong> php文件可以兼容http和php</p><p><strong>2、</strong> 浏览器正确显示php文件：由-中间件-解析执行php并把结果返回给浏览器显示</p><p><strong>3、</strong> 浏览器“看不到”php代码（后端语言）</p><hr><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p><strong>一、</strong> 另建一个 config.php 文件作为数据库连接的全局配置文件，只在需要的地方导入就好了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入数据库连接</span></span><br><span class="line"><span class="keyword">require</span>  <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>二、</strong> config.php 代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 数据库连接的全局配置文件 --&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 连接数据库</span></span><br><span class="line"><span class="variable">$dbhost</span>=<span class="string">&quot;localhost:3306&quot;</span>;</span><br><span class="line"><span class="variable">$dbuser</span>=<span class="string">&quot;db_name&quot;</span>;</span><br><span class="line"><span class="variable">$dbpwd</span>=<span class="string">&quot;db_pwd&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span>=<span class="string">&quot;tb_name&quot;</span>;</span><br><span class="line"><span class="comment">// 会返回mysql</span></span><br><span class="line"><span class="variable">$mysqli_connect</span>=<span class="title function_ invoke__">mysqli_connect</span>(<span class="variable">$dbhost</span>,<span class="variable">$dbuser</span>,<span class="variable">$dbpwd</span>,<span class="variable">$dbname</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>三、</strong> 数据库基本知识复习</p><p><strong>1、</strong> 查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where id=1;</span><br></pre></td></tr></table></figure><p><strong>2、</strong> 删除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from  user where id&gt;10;</span><br></pre></td></tr></table></figure><p><strong>3、</strong> 插入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//全插入</span><br><span class="line">insert into user values(1,&quot;Nailu&quot;,22),(2,&quot;张三&quot;,39)</span><br><span class="line">//插部分</span><br><span class="line">insert into user(id,username) value(3,&quot;李四&quot;);</span><br></pre></td></tr></table></figure><p><strong>4、</strong> 更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user set id=250,username=&quot;test_name&quot; where id=3;</span><br></pre></td></tr></table></figure><hr><h3 id="后端php"><a href="#后端php" class="headerlink" title="后端php"></a>后端php</h3><p><strong>一、</strong> 接收浏览器数据</p><table><tr><td bgcolor=DarkSeaGreen>知识点</td></tr></table><p><strong>1、</strong> php的-超级全局变量-所有作用域都可访问</p><p><strong>2、</strong> 一般利用超级全局变量 <code>$_POST(&quot;v_name&quot;)</code>和<code>$_GET(&quot;v_name&quot;)</code>来接收数据</p><p><strong>3、</strong> 还有一些超级全局变量</p><blockquote><p>$GLOBALS（变量）<br>$_SERVER（请求的信息）<br>$_REQUEST（响应的信息）<br>$_FILES（文件）<br>$_ENV（服务器端环境)  -&gt; $_ENV[‘pwd’]<br>$_COOKIE（鉴权）<br>$_SESSION（鉴权）</p></blockquote><p><strong>二、</strong> 处理并显示给浏览器</p><p>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//导入数据库连接</span></span><br><span class="line"><span class="keyword">require</span>  <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_p</span>(<span class="params"><span class="variable">$i</span>,<span class="variable">$del</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$del</span>&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//sql语句</span></span><br><span class="line">    <span class="variable">$yuju</span>=<span class="string">&quot;select * from gbook;&quot;</span>;</span><br><span class="line">    ;<span class="comment">//得到数据</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$res</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$i</span>,<span class="variable">$yuju</span>))&#123;</span><br><span class="line">        <span class="comment">// 是否还有数据</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="variable">$array</span>=<span class="title function_ invoke__">mysqli_fetch_row</span>(<span class="variable">$res</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;用户名：&quot;</span>.<span class="string">&quot;<span class="subst">$array</span>[1]&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;内容&quot;</span>.<span class="string">&quot;<span class="subst">$array</span>[2]&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;评论时间：&quot;</span>.<span class="string">&quot;<span class="subst">$array</span>[3]&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;ip地址：&quot;</span>.<span class="string">&quot;<span class="subst">$array</span>[4]&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$del</span>==<span class="string">&quot;del&quot;</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;./del.php?id=<span class="subst">$array</span>[0]&#x27;&gt;删除&lt;/a&gt;&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$array</span>[0]&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;连接数据库显示留言失败！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add_p</span>(<span class="params"><span class="variable">$i</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//获取必须数据</span></span><br><span class="line">    <span class="variable">$name</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>];</span><br><span class="line">    <span class="variable">$contents</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="variable">$ip</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line">    <span class="variable">$t</span> =<span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>, <span class="title function_ invoke__">intval</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_TIME&#x27;</span>]));</span><br><span class="line">    <span class="comment">// 写入数据</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$name</span>)&amp;&amp;!<span class="keyword">empty</span>(<span class="variable">$contents</span>)) &#123;</span><br><span class="line">        <span class="comment">//sql语句（拼接）</span></span><br><span class="line">        <span class="variable">$sql</span>=<span class="string">&quot;insert into gbook value(&#x27;0&#x27;,&#x27;<span class="subst">$name</span>&#x27;,&#x27;<span class="subst">$contents</span>&#x27;,&#x27;<span class="subst">$t</span>&#x27;,&#x27;<span class="subst">$ip</span>&#x27;)&quot;</span>;</span><br><span class="line">        <span class="comment">//执行-第一个数据库，第二个表</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$i</span>,<span class="variable">$sql</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;评论成功！&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;评论失败\\\x7e&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">show_p</span>(<span class="variable">$mysqli_connect</span>,<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">add_p</span>(<span class="variable">$mysqli_connect</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="安全问题"><a href="#安全问题" class="headerlink" title="安全问题"></a>安全问题</h3><p><strong>1、</strong> 水平越权漏洞</p><blockquote><p>当不是每个网页每次请求都验证 Cookie 或者 Session 或者 token 而有依据参数判断的话，就好发生水平越权，用户可以暴力破解出管理员的参数值从而控制网页。</p></blockquote><p><strong>2、</strong> XSS（跨站脚本攻击）</p><blockquote><p>观察，是留言板，那么用户在评论的内容里输入php代码是都会被执行呢？关键在于是否过滤，还是直接写入数据库。可以用第三方组件，可以自己写code，也可以是混合。</p></blockquote><p><strong>3、</strong> 第三方富文本编辑器组件的漏洞</p><blockquote><p>比如留言板需要图片呐，文件呐等更丰富的输入形式，那么就可以用上第三方的留言框，但是如果下载的版本有历史漏洞的话那么就会连带着网站也有了漏洞</p></blockquote><hr><h2 id="后台验证功能【以-token-为例】"><a href="#后台验证功能【以-token-为例】" class="headerlink" title="后台验证功能【以 token 为例】"></a>后台验证功能【以 token 为例】</h2><blockquote><p>就如上面-连接数据库-里的-安全问题-一样，如果没有每个网站每次请求都鉴权那么就会-水平越权-。<br>那么三种方式哪种安全呢，各自有啥特点以及适合哪些领域呢？</p></blockquote><table><tr><td bgcolor=DarkSeaGreen>知识点</td></tr></table><p><strong>1、</strong> 鉴权技术</p><blockquote><p>Cookie：放在浏览器里，每次请求附带（可加密）<br>Session：放在服务端，每次请求附带 sessId 在cookie里<br>Token：最新也是最安全的技术，每次请求都有唯一 token，通常的话是放在session里面，防爆破，防 csrf（跨站请求伪造）</p></blockquote><p><strong>2、</strong> Session 小部分</p><p><code>session_start();</code>是php里启动sesson服务的语句，只要你请求里cookie中附带SESSID那么就可以“联系”上 id 唯一的sesison文件并可以读取内容。所以不需要用户开发服务端的时候去写code。</p><p>Session 文件的默认保存路径在 php.ini 文件里的 session.save_path 上改。</p><p><strong>3、</strong> token 部分</p><p>为了让每次表单提交都是唯一的，里面得添加每次刷新变化的 token 值（服务端也同步刷新）。如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;privatetoken&quot;</span> value=<span class="string">&quot;&lt;?php echo <span class="subst">$token</span>;?&gt;&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><p><strong>4、</strong> @作用<br>@的作用是抑制出错时信息的显示，比如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span> = @<span class="title function_ invoke__">file</span>(<span class="string">&#x27;non_existent_file&#x27;</span>);</span><br><span class="line"><span class="variable">$name</span> = <span class="string">&quot;keyword at in PHP&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$name</span>;</span><br></pre></td></tr></table></figure><p>没有@结果是</p><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/1fef5172b1648a38c77ad831b5988bfd.png" alt="没有@的运行结果"><br>有@：<br><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/7d755c9476046186518998916c6969bf.png" alt="有@的运行结果"></p><hr><p>也没特别的流程，直接上代码：<br>首先是登录页面的代码，一个简单的表单提交给 index-t.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@<span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$token</span>=<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">getrandcode</span>());</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>] = <span class="variable">$token</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">getrandcode</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$str</span> =<span class="keyword">array</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;h&#x27;</span>);</span><br><span class="line">    <span class="variable">$res</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">4</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="variable">$rand</span>=<span class="title function_ invoke__">mt_rand</span>(<span class="number">1</span>,<span class="number">17</span>);</span><br><span class="line">        <span class="variable">$res</span> .=<span class="variable">$str</span>[<span class="variable">$rand</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>  <span class="variable">$res</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;zh-CN&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;登录页面&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        body &#123;</span><br><span class="line">            display: flex;</span><br><span class="line">            justify-content: center;</span><br><span class="line">            align-items: center;</span><br><span class="line">            height: <span class="number">100</span>vh;</span><br><span class="line">            font-family: sans-serif;</span><br><span class="line">        &#125;</span><br><span class="line">        .login-form &#123;</span><br><span class="line">            padding: <span class="number">20</span>px;</span><br><span class="line">            border: <span class="number">1</span>px solid <span class="comment">#ccc;</span></span><br><span class="line">            border-radius: <span class="number">8</span>px;</span><br><span class="line">            width: <span class="number">300</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">        .error-message &#123;</span><br><span class="line">            color: red;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form <span class="class"><span class="keyword">class</span>=&quot;<span class="title">login</span>-<span class="title">form</span>&quot; <span class="title">method</span>=&quot;<span class="title">post</span>&quot; <span class="title">action</span>=&quot;./<span class="title">index</span>-<span class="title">t</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">h3</span>&gt;用户登录&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">username</span>&quot;&gt;用户名：&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">id</span>=&quot;<span class="title">username</span>&quot; <span class="title">name</span>=&quot;<span class="title">username</span>&quot; <span class="title">required</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">hidden</span>&quot; <span class="title">name</span>=&quot;<span class="title">privatetoken</span>&quot; <span class="title">value</span>=&quot;&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">token</span>;?&gt;&quot; /&gt;&lt;<span class="title">br</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">password</span>&quot;&gt;密码：&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">password</span>&quot; <span class="title">id</span>=&quot;<span class="title">password</span>&quot; <span class="title">name</span>=&quot;<span class="title">password</span>&quot; <span class="title">required</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot; <span class="title">value</span>=&quot;登录&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后是首页的代码，由于是简单模拟，所以当 token 正确后直接把 token 删了，没有写刷新后的 token 赋值之类的\x7e。<br>code：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">//启动session服务！！！cookie里面有 PHPSESSID 所以</span></span><br><span class="line">    @<span class="title function_ invoke__">session_start</span>();</span><br><span class="line">    <span class="comment">//开始判断</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;1&quot;</span>.<span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;2&quot;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;privatetoken&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;privatetoken&#x27;</span>] == <span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>]) &#123;</span><br><span class="line">            <span class="comment">//删除 session 里面的token</span></span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>]);</span><br><span class="line">            <span class="comment">//打印内容</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;h1&gt;后台首页&lt;/h1&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;欢迎&quot;</span>.<span class="variable">$_SESSION</span>[<span class="string">&quot;username&quot;</span>].<span class="string">&quot;，这里是用户页面&quot;</span>;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;novalite&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//回去吧你！</span></span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: http://localhost/class_1/admin/login-t.php&quot;</span>);   </span><br><span class="line">        <span class="comment">//确保重定向后，后续代码不会被执行   </span></span><br><span class="line">        <span class="keyword">exit</span>();  </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="安全问题-1"><a href="#安全问题-1" class="headerlink" title="安全问题"></a>安全问题</h3><p><strong>1、</strong> cookie窃取 和 Session劫持（会话劫持）</p><p>当 kacker 通过莫种方式拿到了 cookie 或者 SESSID 的话那就可以模拟该用户发送请求。</p><hr><h2 id="文件管理功能"><a href="#文件管理功能" class="headerlink" title="文件管理功能"></a>文件管理功能</h2><blockquote><p>php的文件操作无非文件读取、接收、修改、保存一类。跟着课堂写了一个浏览器显示操作的文件编辑器。能够下载、上传、修改、删除文件。</p></blockquote><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/175e80f883d7f067115265747a1ce47d.png" alt="系统运行图片"></p><table><tr><td bgcolor=DarkSeaGreen>知识点</td></tr></table><p><strong>1、</strong> 文件管理系统的可访问目录修改</p><p>可以在 php.ini 文件里修改 open_basedir，一个点”.”为当前目录;也可以在代码里修改<code>ini_set(&#39;open_basedir&#39;,&#39;.&#39;);</code>。</p><p><strong>2、</strong> 文件下载就是请求包里面的参数不同</p><blockquote><p>&#x2F;&#x2F;设置下载请求<br>header(“Content-type:application&#x2F;octet-stream”);<br>header(“Accept-Length:”.filesize($file_path));<br>header(“Content-Disposition: attachment; filename&#x3D;”.$file_path);</p></blockquote><p><strong>3、</strong> 读取 form 表单传送过来的文件</p><p>需要用到超级全局变量 $_FILES,实例代码如下（不完整</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//上传</span></span><br><span class="line">&lt;form action=<span class="string">&quot;upload.php&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">   &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;fileToUpload&quot;</span> id=<span class="string">&quot;file&quot;</span>&gt;</span><br><span class="line">   &lt;button type=<span class="string">&quot;submit&quot;</span>&gt;上传文件&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取</span></span><br><span class="line"><span class="variable">$name</span>=<span class="variable">$_FILES</span>[<span class="string">&#x27;fileToUpload&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="variable">$type</span>=<span class="variable">$_FILES</span>[<span class="string">&#x27;fileToUpload&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line"><span class="variable">$size</span>=<span class="variable">$_FILES</span>[<span class="string">&#x27;fileToUpload&#x27;</span>][<span class="string">&#x27;size&#x27;</span>];</span><br><span class="line"><span class="variable">$tmp_name</span>=<span class="variable">$_FILES</span>[<span class="string">&#x27;fileToUpload&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"><span class="variable">$error</span>=<span class="variable">$_FILES</span>[<span class="string">&#x27;fileToUpload&#x27;</span>][<span class="string">&#x27;error&#x27;</span>];</span><br></pre></td></tr></table></figure><hr><h3 id="文件管理系统"><a href="#文件管理系统" class="headerlink" title="文件管理系统"></a>文件管理系统</h3><blockquote><p>由于并不复杂，就集合与一个php文件中，有些简陋并没有考虑到只包含文件或者只包含文件夹的情况。就只是遍历显示\x7e</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ======</span></span><br><span class="line"><span class="comment"> * ======文件夹的读取与保存操作</span></span><br><span class="line"><span class="comment"> * ======</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意：打开的是文件夹，所以最后是有 / 的</span></span><br><span class="line"><span class="variable">$dir</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;path&#x27;</span>] ?? <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="comment">//输出数组</span></span><br><span class="line"><span class="variable">$file_list</span>;</span><br><span class="line"><span class="comment">//显示函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_file</span>(<span class="params"><span class="variable">$path</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">global</span> <span class="variable">$file_list</span>;</span><br><span class="line"><span class="variable">$f</span>=<span class="title function_ invoke__">opendir</span>(<span class="variable">$path</span>);</span><br><span class="line"><span class="comment">//当前目录是还有文件或者文件夹</span></span><br><span class="line"><span class="keyword">while</span>((<span class="variable">$s</span>=<span class="title function_ invoke__">readdir</span>(<span class="variable">$f</span>))!=<span class="literal">false</span>)&#123;</span><br><span class="line"><span class="comment">//过滤点</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$s</span>!=<span class="string">&quot;.&quot;</span> &amp;&amp; <span class="variable">$s</span>!=<span class="string">&quot;..&quot;</span>)&#123;</span><br><span class="line"><span class="comment">//文件类型(dir,file)和路径</span></span><br><span class="line"><span class="variable">$file_path</span>=<span class="string">&quot;<span class="subst">$path</span>/<span class="subst">$s</span>&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$file_path</span>))&#123;</span><br><span class="line"><span class="variable">$file_type</span>=<span class="title function_ invoke__">filetype</span>(<span class="variable">$file_path</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;文件路径--&quot;</span>.<span class="variable">$file_path</span>.<span class="string">&quot;--不存在&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//二维数组保存</span></span><br><span class="line"><span class="variable">$file_list</span>[<span class="variable">$file_type</span>][]= <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;file_name&#x27;</span> =&gt; <span class="variable">$s</span>, </span><br><span class="line"><span class="string">&#x27;file_size&#x27;</span> =&gt; <span class="title function_ invoke__">round</span>(<span class="title function_ invoke__">filesize</span>(<span class="variable">$file_path</span>)/<span class="number">1024</span>),</span><br><span class="line"><span class="string">&#x27;file_time&#x27;</span> =&gt; <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>,<span class="title function_ invoke__">filemtime</span>(<span class="variable">$file_path</span>)),</span><br><span class="line"><span class="string">&#x27;file_path&#x27;</span> =&gt; <span class="variable">$file_path</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ======</span></span><br><span class="line"><span class="comment"> * ======路径的过滤操作</span></span><br><span class="line"><span class="comment"> * ======1、php自带的ini文件里设置最大路径</span></span><br><span class="line"><span class="comment"> * ======2、php的可访问目录函数把范围框在这个文件夹</span></span><br><span class="line"><span class="comment"> * ======ini_set(&#x27;open_basedir&#x27;,_DIR_)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_dir</span>(<span class="variable">$dir</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">show_file</span>(<span class="variable">$dir</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">dir</span>(<span class="string">&#x27;路径请求错误！不是文件夹路径！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ======</span></span><br><span class="line"><span class="comment"> * ======文件的编辑，删除，下载函数</span></span><br><span class="line"><span class="comment"> * ======</span></span><br><span class="line"><span class="comment"> * ======</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delete</span>(<span class="params"><span class="variable">$file_path</span></span>)</span>&#123;</span><br><span class="line"><span class="comment">//使用php自带函数删除，避免使用system()系统</span></span><br><span class="line"><span class="comment">// system(&quot;del $file_path&quot;);</span></span><br><span class="line"><span class="title function_ invoke__">unlink</span>(<span class="variable">$file_path</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//下载函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">download</span>(<span class="params"><span class="variable">$file_path</span></span>)</span>&#123;</span><br><span class="line"><span class="comment">//设置请求</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type:application/octet-stream&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Accept-Length:&quot;</span>.<span class="title function_ invoke__">filesize</span>(<span class="variable">$file_path</span>));</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Disposition: attachment; filename=&quot;</span>.<span class="variable">$file_path</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//编辑的显示函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">edit_file_show</span>(<span class="params"><span class="variable">$file_path</span></span>)</span>&#123;</span><br><span class="line"><span class="comment">//在当前页面显示一个框和一个提交按钮</span></span><br><span class="line"><span class="variable">$content</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file_path</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;form name=&#x27;form1&#x27; method=&#x27;post&#x27; action=&#x27;&#x27;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;文件名：&quot;</span>.<span class="variable">$file</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;文件内容：&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;textarea name=&#x27;eidt_code&#x27; style=&#x27;resize:none &#x27;rows=&#x27;50&#x27; cols=&#x27;50&#x27;&gt;&quot;</span>.<span class="variable">$content</span>.<span class="string">&quot;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;input type=&#x27;submit&#x27; name=&#x27;submit&#x27; id=&#x27;submit&#x27; value=&#x27;提交&#x27;&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/form&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//编辑的写入函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">edit_file_action</span>(<span class="params"><span class="variable">$file_path</span>,<span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;file::&quot;</span>.<span class="variable">$content</span>;</span><br><span class="line"><span class="variable">$f</span>=<span class="title function_ invoke__">fopen</span>(<span class="variable">$file_path</span>,<span class="string">&#x27;w+&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$f</span>,<span class="variable">$content</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$f</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//选择</span></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这里对路径一点判断都没有！会有任意文件读取漏洞！</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 好吧，其实不会有，就是把报错变成下载的包了，意外</span></span><br><span class="line"><span class="comment"> * 访问包含了好多啊~~</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file_path&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$action</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;del&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">delete</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;down&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">download</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;edit&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">edit_file_show</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;eidt_code&#x27;</span>]))&#123;<span class="title function_ invoke__">edit_file_action</span>(<span class="variable">$file</span>,<span class="variable">$_POST</span>[<span class="string">&#x27;eidt_code&#x27;</span>]);&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- </span><br><span class="line"></span><br><span class="line">======</span><br><span class="line">======前端的显示部分</span><br><span class="line">======</span><br><span class="line"></span><br><span class="line"> --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;zh-CN&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">  &lt;thead&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;th&gt;类型&lt;/th&gt;</span><br><span class="line">      &lt;th&gt;名字&lt;/th&gt;</span><br><span class="line">      &lt;th&gt;日期&lt;/th&gt;</span><br><span class="line">      &lt;th&gt;路径&lt;/th&gt;</span><br><span class="line">      &lt;th&gt;大小&lt;/th&gt;</span><br><span class="line">      &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">  &lt;/thead&gt;</span><br><span class="line">  &lt;!-- 循环文件夹 --&gt;</span><br><span class="line">  <span class="meta">&lt;?php</span> <span class="keyword">foreach</span> (<span class="variable">$file_list</span>[<span class="string">&#x27;dir&#x27;</span>] <span class="keyword">as</span> <span class="variable">$v</span>): <span class="meta">?&gt;</span></span><br><span class="line">  &lt;tbody&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;td&gt;&lt;img src=<span class="string">&quot;./img/dir.webp&quot;</span> height=<span class="string">&quot;20&quot;</span> width=<span class="string">&quot;20</span></span><br><span class="line"><span class="string">      &quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="variable">$v</span>[<span class="string">&quot;file_name&quot;</span>]; <span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="variable">$v</span>[<span class="string">&#x27;file_time&#x27;</span>]; <span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="variable">$v</span>[<span class="string">&quot;file_path&quot;</span>]; <span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="variable">$v</span>[<span class="string">&quot;file_size&quot;</span>]; <span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;&lt;a href=<span class="string">&quot;?path=&lt;?php echo <span class="subst">$v</span>[&#x27;file_path&#x27;] ?&gt;&quot;</span>&gt;打开&lt;/a&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">endforeach</span>; <span class="meta">?&gt;</span></span><br><span class="line">&lt;!-- 循环文件 --&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="keyword">foreach</span> (<span class="variable">$file_list</span>[<span class="string">&#x27;file&#x27;</span>] <span class="keyword">as</span> <span class="variable">$v</span>): <span class="meta">?&gt;</span></span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;td&gt;&lt;img src=<span class="string">&quot;./img/file.png&quot;</span> height=<span class="string">&quot;20&quot;</span> width=<span class="string">&quot;20</span></span><br><span class="line"><span class="string">      &quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="variable">$v</span>[<span class="string">&quot;file_name&quot;</span>]; <span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="variable">$v</span>[<span class="string">&quot;file_time&quot;</span>]; <span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="variable">$v</span>[<span class="string">&quot;file_path&quot;</span>]; <span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="variable">$v</span>[<span class="string">&quot;file_size&quot;</span>]; <span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;</span><br><span class="line">      &lt;a href=<span class="string">&quot;?action=del&amp;file_path=&lt;?php echo <span class="subst">$v</span>[&#x27;file_path&#x27;] ?&gt;&quot;</span>&gt;删除&lt;/a&gt;</span><br><span class="line">      &lt;a href=<span class="string">&quot;?action=down&amp;file_path=&lt;?php echo <span class="subst">$v</span>[&#x27;file_path&#x27;] ?&gt;&quot;</span>&gt;下载&lt;/a&gt;</span><br><span class="line">      &lt;a href=<span class="string">&quot;?action=edit&amp;file_path=&lt;?php echo <span class="subst">$v</span>[&#x27;file_path&#x27;] ?&gt;&quot;</span>&gt;编辑&lt;/a&gt;</span><br><span class="line">      &lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="keyword">endforeach</span>; <span class="meta">?&gt;</span></span><br><span class="line">  &lt;/tbody&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="安全问题-2"><a href="#安全问题-2" class="headerlink" title="安全问题"></a>安全问题</h3><p><strong>1、</strong> 目录遍历</p><p>如果没有设置-可访问目录-就会出现</p><p><strong>2、</strong> 任意文件上传、删除、包含、下载</p><blockquote><p>上传没有过滤：传一句话木马<br>还没有重命名文件：文件包含执行木马，控制网站<br>没有设置-可访问目录-：任意删除、下载</p></blockquote><p>措施：</p><blockquote><p>输入验证<br>限制文件类型<br>过滤危险字符：str_replace等。<br>配置open_basedir：可访问目录。<br>升级PHP版本<br>重命名上传文件：防止被读取。<br>设置白名单：<br>权限管理：最小化allow_url_include和allow_url_fopen的权限。</p></blockquote><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;b站小迪23年网安基础课程，22节——27节，php简单回顾（1）&lt;/p&gt;</summary>
    
    
    
    <category term="课堂" scheme="https://www.hfqing.top/categories/%E8%AF%BE%E5%A0%82/"/>
    
    <category term="笔记" scheme="https://www.hfqing.top/categories/%E8%AF%BE%E5%A0%82/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="网课小迪" scheme="https://www.hfqing.top/tags/%E7%BD%91%E8%AF%BE%E5%B0%8F%E8%BF%AA/"/>
    
    <category term="温习" scheme="https://www.hfqing.top/tags/%E6%B8%A9%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>kali安装失败-选择并安装软件包-一步到位</title>
    <link href="https://www.hfqing.top/2025/07/25/kali%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5-%E9%80%89%E6%8B%A9%E5%B9%B6%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E5%8C%85-%E4%B8%80%E6%AD%A5%E5%88%B0%E4%BD%8D/"/>
    <id>https://www.hfqing.top/2025/07/25/kali%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5-%E9%80%89%E6%8B%A9%E5%B9%B6%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E5%8C%85-%E4%B8%80%E6%AD%A5%E5%88%B0%E4%BD%8D/</id>
    <published>2025-07-25T14:32:37.000Z</published>
    <updated>2025-09-13T08:38:33.367Z</updated>
    
    <content type="html"><![CDATA[<p>使用kali官网配置好的虚拟机文件跳过使用iso镜像创建kali虚拟机的过程中遇到的问题</p><span id="more"></span><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;为了尝试 “rm -rf &#x2F;*“ 的威力导致的kali无用（心虚），需要重新装一个。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;但是吧，如题，在这一步卡住了，网上找blog【<a href="https://blog.csdn.net/Mengxi123jdndhux/article/details/127710371">kali 安装步骤失败，选择并安装软件包，失败解决方法 “换源”_kali安装步骤失败 选择并安装软件-CSDN博客</a>】，但是并没有解决，我进入tty2终端后”nano &#x2F;etc&#x2F;apt&#x2F;sources.list”发现里面是空的！就算写上去也没用，折腾好久也没搞定。<br>&nbsp;&nbsp;&nbsp;&nbsp;\x7e~有图省事直接拿自己csdn账号的图(~~</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;最后还是选择简（逃）单（课）方式——直接下载别人安装好的虚拟机文件压缩包！依旧是kali官网上的【<a href="https://www.kali.org/" title="Kali Linux | Penetration Testing and Ethical Hacking Linux Distribution">Kali Linux | Penetration Testing and Ethical Hacking Linux Distribution</a>】</p><p>&nbsp;&nbsp;&nbsp;&nbsp;点击download进入下载界面如图：</p><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/716e8b5dec3279f4fcd4316dfeaad461.png" alt="下载界面"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;这次选择右边的卡片，然后按照自己的虚拟PC软件选就好了。一般下载上面的，下面的是字面意思每周更新所以不是稳定版，一般用户直接点下载图标就好了。【下载图标右边的三是啥最下面会有解释，最终下载的都是一样的压缩包！不想麻烦直接点下载就好了】</p><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/2e4c3d6476d2ae2d4b9b5a45d0d14081.png" alt="八个卡片"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;下载完成后放到对应位置就可以解压缩了，这是可以直接使用虚拟PC软件打开的，这里用VM浅浅演示一下。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;首先打开VM，点击打开虚拟机，找到对应的文件位置，进去发现一个VM的.vmx启动文件，双击打开就好了。【vmx是啥最下面会提】</p><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/ba15ca001d7fe60e4b76075a166b7baf.png" alt="虚拟机启动"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;左下角可以看到账户名和密码都是kali，ok，现在就可以启动启动了！</p><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/35b5b8fb0f6893e055598e16115ac860.png" alt="kali虚拟机"></p><h2 id="Learn-Time"><a href="#Learn-Time" class="headerlink" title="Learn Time!"></a>Learn Time!</h2><p><strong>1、</strong> 演示里VM打开的.vmx文件是啥？</p><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/2e15d6f95e5ceadc0c37d7acd2bfb9b7.png" alt="vmx文件"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;其实从windows对.vmx文件的解释也可以看出来是配置文件（用记事本打开试试）</p><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/db0b372eb80552fcbf02f4493668a385.png" alt="配置文件"></p><p><strong>2、</strong> 下载图标右边第一个“torrent”是啥？</p><p>其实这就是常说的 BT种子&#x2F;磁力链接 文件，直接点击下载会发现只是个几百k的小文件，和我们直接下载的压缩包就多了个.torrent（当然名字并不重要）。可以在网盘或者讯飞用来添加BT下载任务来下载，下载速度挺快的，如果电脑直接下载速度感人的话可以试试~</p><p>想简单了解可以移步【<a href="https://blog.csdn.net/2401_86399278/article/details/149335332" title="torrent（BT种子）文件的简单介绍与使用-CSDN博客">torrent（BT种子）文件的简单介绍与使用-CSDN博客</a>】<br><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/291f0c60f082f4b8861ab009a5cb6afc.png" alt="种子文件"></p><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/7b9d270ffa4b95644a457dc3a5e3cf83.png" alt="下载速度"></p><p><strong>3、</strong> 下载图标右边第二个“docs”是啥？</p><p>&nbsp;&nbsp;&nbsp;&nbsp;点击发现是个链接，并不是“第三种下载方式”。毕竟 “docs” 翻译过来就是 “文档” 的意思。里面也是如其意的是帮助你下载的【官方帮助文档】，四个虚拟pc软件的文档也都应当的在一个网址上。</p><p><strong>4、</strong> 最后一个“sum”是啥？</p><p>&nbsp;&nbsp;&nbsp;&nbsp;点击看卡片翻转过来显示了一串字母数字组合【SHA-256哈希值】。其实是用来帮你判断下载的.7z文件是否是完整的。在linux里有个命令可以查看文件的【SHA-256哈希值】<code>sha256sum filename</code>，如下。不过现在的话基本不会出现下载的文件不完整的事情就是。</p><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/bc4fbb908407b8c402e59fcbc4eaa9fd.png" alt="查看命令"></p><p><img src="https://imgproxy.hfqing.top/image/?url=https://p.cldisk.com/star3/origin/3adf4f8d8685dd8e139479561b9ff09d.png" alt="sum哈希"></p><p>命令详情可以移步【<a href="https://zhuanlan.zhihu.com/p/689918610" title="https:&#x2F;&#x2F;zhuanlan.zhihu.com&#x2F;p&#x2F;689918610">https://zhuanlan.zhihu.com/p/689918610</a>】</p><p>（如有不恰当的地方欢迎指正哦 ~o(●’◡’●)o）</p><p><strong>参考博客：</strong></p><p>【<a href="https://blog.51cto.com/u_16175522/12092522" title="bios里的vmx是什么意思_mob649e8169ec5f的技术博客_51CTO博客">bios里的vmx是什么意思_mob649e8169ec5f的技术博客_51CTO博客</a>】</p><p>【<a href="https://www.xitongzhijia.net/xtjc/20230104/272154.html" title="torrent是什么文件？torrent文件怎么打开？ - 系统之家">torrent是什么文件？torrent文件怎么打开？ - 系统之家</a>】</p><p>【<a href="https://www.bilibili.com/opus/770355741148053553" title="BT种子(torrent)&amp;磁力链接的简介与使用 - 哔哩哔哩">BT种子(torrent)&amp;磁力链接的简介与使用 - 哔哩哔哩</a>】</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用kali官网配置好的虚拟机文件跳过使用iso镜像创建kali虚拟机的过程中遇到的问题&lt;/p&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://www.hfqing.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="实操" scheme="https://www.hfqing.top/categories/%E9%9A%8F%E7%AC%94/%E5%AE%9E%E6%93%8D/"/>
    
    
    <category term="kali" scheme="https://www.hfqing.top/tags/kali/"/>
    
    <category term="bug" scheme="https://www.hfqing.top/tags/bug/"/>
    
  </entry>
  
</feed>
